{"version":3,"sources":["webpack:///./dist/gamifilearning-lib/fesm5/gamifilearning-lib.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/blocked-dialog/blocked-dialog.component.html","webpack:///./src/app/blocked-dialog/blocked-dialog.component.scss","webpack:///./src/app/blocked-dialog/blocked-dialog.component.ts","webpack:///./src/app/coffee/coffee.component.html","webpack:///./src/app/coffee/coffee.component.scss","webpack:///./src/app/coffee/coffee.component.ts","webpack:///./src/app/communication/communication.service.ts","webpack:///./src/app/graphql.module.ts","webpack:///./src/app/help/help.component.html","webpack:///./src/app/help/help.component.scss","webpack:///./src/app/help/help.component.ts","webpack:///./src/app/labeling/labeling.component.html","webpack:///./src/app/labeling/labeling.component.scss","webpack:///./src/app/labeling/labeling.component.ts","webpack:///./src/app/labeling/rewards.ts","webpack:///./src/app/logged-out/logged-out.component.html","webpack:///./src/app/logged-out/logged-out.component.scss","webpack:///./src/app/logged-out/logged-out.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.scss","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACqB;AAC5B;AAClB;AACD;AACW;AACyS;AACtO;AACjE;AAC6E;AACrF;AAC+B;;AAEpE;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,uCAAuC,sBAAsB,aAAa,iBAAiB,aAAa,uBAAuB,4BAA4B,+BAA+B,oCAAoC,UAAU,kBAAkB,uBAAuB,gBAAgB,iBAAiB,kBAAkB,oBAAoB,uBAAuB,kBAAkB,eAAe,oBAAoB,aAAa;AACjb,iBAAiB;AACjB;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA,aAAa,oCAAoC;AACjD,aAAa,oCAAoC;AACjD,aAAa,oCAAoC;AACjD,aAAa;AACb;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iwCAAiwC,cAAc;AAC/wC,8CAA8C,aAAa,gBAAgB,kBAAkB,SAAS,UAAU,WAAW,YAAY,aAAa,kBAAkB,QAAQ,WAAW;AACzL,iBAAiB;AACjB;AACA;AACA,qDAAqD,WAAW;AAChE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA,aAAa,wCAAwC;AACrD,aAAa,wCAAwC;AACrD,aAAa,wCAAwC;AACrD,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,2NAA2N,WAAW,uLAAuL,WAAW,qLAAqL,YAAY,gJAAgJ;AACzvB,oCAAoC,WAAW;AAC/C,iBAAiB;AACjB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA,mCAAmC,oDAAe;AAClD;AACA,2BAA2B,oDAAe;AAC1C;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,8BAA8B,kBAAkB;AAChD,+CAA+C,qDAAqD,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,0BAA0B;AAC1D,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,kDAAkD,WAAW;AAC7D,yDAAyD,sEAAgB,EAAE,8CAA8C,8BAA8B,EAAE,8CAA8C;AACvM;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAe;AACxC;AACA,4BAA4B,oDAAe;AAC3C;AACA,sDAAsD,gCAAgC,EAAE;AACxF;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,iEAAiE,gCAAgC,EAAE;AACnG;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,2DAAG,iBAAiB,yCAAyC,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,+CAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,+CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,gEAAU;AAC1B,MAAM;AACN,6DAA6D,sEAAgB,EAAE,kDAAkD,gCAAgC,4DAAM,CAAC,gEAAU,GAAG,EAAE,kDAAkD;AACzO;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA,WAAW,EAAE;AACb,qBAAqB,qEAAS;AAC9B,IAAI,iEAAK,EAAE,wBAAwB;AACnC,IAAI,mEAAO,IAAI,WAAW,GAAG,qEAAS;AACtC,QAAQ,iEAAK,EAAE,mCAAmC;AAClD,QAAQ,iEAAK,EAAE,qBAAqB,SAAS,iBAAiB;AAC9D,QAAQ,iEAAK,EAAE,mCAAmC;AAClD;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,qKAAqK,SAAS,iDAAiD,2CAA2C,2CAA2C,kBAAkB,oDAAoD,4CAA4C;AACva;AACA,iBAAiB;AACjB;AACA;AACA,wDAAwD;AACxD,SAAS,4BAA4B;AACrC,SAAS,gCAAgC,OAAO,oDAAM,SAAS,iEAAe,IAAI;AAClF,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,uJAAuJ;AACvJ,sCAAsC,cAAc,cAAc,cAAc;AAChF,iBAAiB;AACjB;AACA;AACA,kDAAkD;AAClD,SAAS,oBAAoB;AAC7B,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,qJAAqJ,+BAA+B;AACpL;AACA,wBAAwB,mEAAO;AAC/B,4BAA4B,sEAAU,eAAe,wEAAY;AACjE;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,0CAA0C,oBAAoB,sBAAsB,mBAAmB;AACvG,iBAAiB;AACjB;AACA;AACA,wDAAwD;AACxD,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,kDAAI;AACpB;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA,WAAW,EAAE;AACb;AACA,IAAI,gEAAc;AAClB,IAAI,sEAAoB;AACxB,IAAI,+DAAa;AACjB,IAAI,iEAAe;AACnB,IAAI,mEAAiB;AACrB,IAAI,+DAAa;AACjB,IAAI,+DAAa;AACjB,IAAI,gEAAY;AAChB,IAAI,gEAAc;AAClB,IAAI,kEAAgB;AACpB,IAAI,gEAAc;AAClB,IAAI,+DAAa;AACjB,IAAI,0EAAwB;AAC5B,IAAI,kEAAgB;AACpB,IAAI,iEAAe;AACnB,IAAI,mEAAiB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uEAAa;AACrC,wBAAwB,4FAAuB;AAC/C;AACA,wBAAwB,sEAAgB;AACxC,wBAAwB,0DAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,mBAAmB;AAChD;AACA;AACA,kBAAkB,2DAAG,iBAAiB,mCAAmC,EAAE;AAC3E;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,uDAAuD;AACvD,SAAS,OAAO,gEAAU;AAC1B,MAAM;AACN,8DAA8D,sEAAgB,EAAE,mDAAmD,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","file":"main.js","sourcesContent":["import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { __spread } from 'tslib';\nimport '@angular/material/list';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { MAT_DIALOG_DATA, MatDialog, MatSnackBar, MatGridListModule, MatCardModule, MatMenuModule, MatIconModule, MatButtonModule, MatProgressBarModule, MatInputModule, MatTableModule, MatToolbarModule, MatBadgeModule, MatListModule, MatProgressSpinnerModule, MatTooltipModule, MatDialogModule, MatSnackBarModule } from '@angular/material';\nimport { style, animation, animate, keyframes, trigger, transition, useAnimation } from '@angular/animations';\nimport { FormsModule } from '@angular/forms';\nimport { Component, Injectable, Inject, Pipe, defineInjectable, inject, NgModule, Input, ViewChild } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar RootComponent = /** @class */ (function () {\r\n    function RootComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RootComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.communication.loadData().subscribe(res => {\r\n        //   this.texts = res;\r\n        // });\r\n        // this.questions = QUESTIONS;\r\n    };\r\n    RootComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'gl-root',\r\n                    template: \"<div class=\\\"wrapper\\\">\\r\\n  <gl-navbar></gl-navbar>\\r\\n  <!--\\r\\n    <gl-question-room\\r\\n      [texts]=\\\"texts | async\\\"\\r\\n      [questions]=\\\"questions\\\"\\r\\n    ></gl-question-room>\\r\\n  -->\\r\\n</div>\\r\\n\",\r\n                    styles: [\".wrapper{background-color:#eee;height:100vh;display:-ms-grid;display:grid;-ms-grid-rows:auto 1fr;grid-template-rows:auto 1fr;-ms-grid-columns:50px 1fr 50px;grid-template-columns:50px 1fr 50px}gl-navbar{-ms-grid-column:1;-ms-grid-column-span:3;grid-column:1/4}gl-question-room{-ms-grid-column:2;grid-column-start:2;-ms-grid-column-span:1;grid-column-end:3;-ms-grid-row:2;-ms-grid-row-span:5;grid-row:2/7}\"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    RootComponent.ctorParameters = function () { return []; };\r\n    return RootComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DashboardComponent = /** @class */ (function () {\r\n    function DashboardComponent() {\r\n        this.cards = [\r\n            { title: 'Card 1', cols: 1, rows: 1 },\r\n            { title: 'Card 2', cols: 1, rows: 1 },\r\n            { title: 'Card 3', cols: 1, rows: 1 },\r\n            { title: 'Card 4', cols: 1, rows: 1 }\r\n        ];\r\n    }\r\n    DashboardComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'gl-dashboard',\r\n                    template: \"<div class=\\\"grid-container\\\">\\r\\n  <h1 class=\\\"mat-h1\\\">Dashboard</h1>\\r\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\r\\n    <mat-grid-tile [colspan]=\\\"2\\\" [rowspan]=\\\"1\\\">\\r\\n      <mat-card class=\\\"dashboard-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>\\r\\n            Leaderboard\\r\\n            <button\\r\\n              mat-icon-button\\r\\n              class=\\\"more-button\\\"\\r\\n              [matMenuTriggerFor]=\\\"menu\\\"\\r\\n              aria-label=\\\"Toggle menu\\\"\\r\\n            >\\r\\n              <mat-icon>more_vert</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\r\\n              <button mat-menu-item>Expand</button>\\r\\n              <button mat-menu-item>Remove</button>\\r\\n            </mat-menu>\\r\\n          </mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\r\\n          <!-- <app-leaderboard></app-leaderboard> -->\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile *ngFor=\\\"let card of cards\\\" [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\r\\n      <mat-card class=\\\"dashboard-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>\\r\\n            {{ card.title }}\\r\\n            <button\\r\\n              mat-icon-button\\r\\n              class=\\\"more-button\\\"\\r\\n              [matMenuTriggerFor]=\\\"menu\\\"\\r\\n              aria-label=\\\"Toggle menu\\\"\\r\\n            >\\r\\n              <mat-icon>more_vert</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\r\\n              <button mat-menu-item>Expand</button>\\r\\n              <button mat-menu-item>Remove</button>\\r\\n            </mat-menu>\\r\\n          </mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\r\\n          <div>Card Content Here</div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\",\r\n                    styles: [\".grid-container{padding:20px}.dashboard-card{position:absolute;top:15px;left:15px;right:15px;bottom:15px}.more-button{position:absolute;top:5px;right:10px}\"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    DashboardComponent.ctorParameters = function () { return []; };\r\n    return DashboardComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar LeaderboardComponent = /** @class */ (function () {\r\n    function LeaderboardComponent() {\r\n        this.columnsToDisplay = ['rank', 'userName', 'score'];\r\n        this.users = [\r\n            { name: 'Phil', rank: '1', score: '555' },\r\n            { name: 'Mill', rank: '2', score: '444' },\r\n            { name: 'Bill', rank: '3', score: '333' },\r\n            { name: 'Til', rank: '4', score: '222' }\r\n        ];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    LeaderboardComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    LeaderboardComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'gl-leaderboard',\r\n                    template: \"<table mat-table [dataSource]=\\\"users\\\">\\r\\n  <ng-container matColumnDef=\\\"rank\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Rank </th>\\r\\n    <td mat-cell *matCellDef=\\\"let user\\\"> {{user.rank}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"userName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let user\\\"> {{user.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"score\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Score </th>\\r\\n    <td mat-cell *matCellDef=\\\"let user\\\"> {{user.score}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let myRowData; columns: columnsToDisplay\\\"></tr>\\r\\n</table>\",\r\n                    styles: [\"table{width:100%}\"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    LeaderboardComponent.ctorParameters = function () { return []; };\r\n    return LeaderboardComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar NUMBER_OF_TEXTS = 5;\r\n/** @type {?} */\r\nvar UNLABELED_INDEX = 31;\r\n/** @type {?} */\r\nvar ENTROPY_INDEX = 32;\r\n/** @type {?} */\r\nvar URL_TO_DATA = './assets/data/mainTfIdf.05112018.feature.json';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar QuestionService = /** @class */ (function () {\r\n    function QuestionService() {\r\n        this.data = [];\r\n        this.currentInstance = new BehaviorSubject(null);\r\n        this.currentInstance$ = this.currentInstance.asObservable();\r\n        this.answers = new BehaviorSubject([]);\r\n        this.answers$ = this.answers.asObservable();\r\n        // this.updateNextInstance();\r\n    }\r\n    /**\r\n     * @param {?=} data\r\n     * @return {?}\r\n     */\r\n    QuestionService.prototype.getUnlabeledInstances = /**\r\n     * @param {?=} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        if (data === void 0) { data = this.data; }\r\n        return data.filter(function (feature) { return feature.features[1][UNLABELED_INDEX] != null; });\r\n    };\r\n    /**\r\n     * Return top scoring data objects\r\n     * @param data corresponding data set\r\n     * @param number number of instances to return\r\n     */\r\n    /**\r\n     * Return top scoring data objects\r\n     * @param {?} data corresponding data set\r\n     * @param {?=} number number of instances to return\r\n     * @return {?}\r\n     */\r\n    QuestionService.prototype.getTopInstances = /**\r\n     * Return top scoring data objects\r\n     * @param {?} data corresponding data set\r\n     * @param {?=} number number of instances to return\r\n     * @return {?}\r\n     */\r\n    function (data, number) {\r\n        if (number === void 0) { number = NUMBER_OF_TEXTS; }\r\n        /** @type {?} */\r\n        var unlabeled = this.getUnlabeledInstances(data);\r\n        return unlabeled\r\n            .sort(function (a, b) {\r\n            if (a.features[1][ENTROPY_INDEX] < b.features[1][ENTROPY_INDEX]) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        })\r\n            .slice(0, number);\r\n    };\r\n    /**\r\n     * @param {?} answers\r\n     * @return {?}\r\n     */\r\n    QuestionService.prototype.handleSubmittedAnswers = /**\r\n     * @param {?} answers\r\n     * @return {?}\r\n     */\r\n    function (answers) {\r\n        this.answers.next(answers);\r\n    };\r\n    QuestionService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    QuestionService.ctorParameters = function () { return []; };\r\n    /** @nocollapse */ QuestionService.ngInjectableDef = defineInjectable({ factory: function QuestionService_Factory() { return new QuestionService(); }, token: QuestionService, providedIn: \"root\" });\r\n    return QuestionService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar GIPHY_API_KEY = 'n8VZGDtSpax8HM6j486SScMj5vMcavN2';\r\n/** @type {?} */\r\nvar GIPHY_URL = 'http://api.giphy.com/v1/gifs/search';\r\nvar GamificationService = /** @class */ (function () {\r\n    function GamificationService(http) {\r\n        var _this = this;\r\n        this.http = http;\r\n        this.score = new BehaviorSubject(0);\r\n        this.score$ = this.score.asObservable();\r\n        this.progress = new BehaviorSubject(0);\r\n        this.progress$ = this.progress.asObservable();\r\n        this.fetchScore().subscribe(function (score) { return _this.score.next(score); });\r\n    }\r\n    /**\r\n     * @param {?} weight\r\n     * @return {?}\r\n     */\r\n    GamificationService.prototype.increaseScore = /**\r\n     * @param {?} weight\r\n     * @return {?}\r\n     */\r\n    function (weight) {\r\n        var _this = this;\r\n        this.doIncreaseScore(weight).subscribe(function (score) { return _this.score.next(score); });\r\n        // this.score.next(this.score.value + Math.floor(weight * 100));\r\n    };\r\n    /**\r\n     * @param {?=} date\r\n     * @return {?}\r\n     */\r\n    GamificationService.prototype.getTrivia = /**\r\n     * @param {?=} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        if (date === void 0) { date = new Date(); }\r\n        return this.http.get(\"http://numbersapi.com/\" + (date.getMonth() + 1) + \"/\" + date.getDate() + \"/date\", {\r\n            responseType: 'text'\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @return {?}\r\n     */\r\n    GamificationService.prototype.getRandomGif = /**\r\n     * @param {?} query\r\n     * @return {?}\r\n     */\r\n    function (query) {\r\n        var _this = this;\r\n        return this.http\r\n            .get(GIPHY_URL, {\r\n            params: {\r\n                api_key: GIPHY_API_KEY,\r\n                limit: '50',\r\n                rating: 'g',\r\n                q: query\r\n            }\r\n        })\r\n            .pipe(\r\n        // chose a random gif out of the array of gifs\r\n        map(function (gif) { return _this.getRandomElement(gif.data); }));\r\n    };\r\n    // currently mocked. Should be persisted in backend later\r\n    // currently mocked. Should be persisted in backend later\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    GamificationService.prototype.fetchScore = \r\n    // currently mocked. Should be persisted in backend later\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return of(500);\r\n    };\r\n    // currently mocked too\r\n    // currently mocked too\r\n    /**\r\n     * @private\r\n     * @param {?} weight\r\n     * @return {?}\r\n     */\r\n    GamificationService.prototype.doIncreaseScore = \r\n    // currently mocked too\r\n    /**\r\n     * @private\r\n     * @param {?} weight\r\n     * @return {?}\r\n     */\r\n    function (weight) {\r\n        return of(this.score.value + Math.floor(weight * 100));\r\n    };\r\n    /** Helper function to chose a random element from an array */\r\n    /**\r\n     * Helper function to chose a random element from an array\r\n     * @private\r\n     * @template T\r\n     * @param {?} array\r\n     * @return {?}\r\n     */\r\n    GamificationService.prototype.getRandomElement = /**\r\n     * Helper function to chose a random element from an array\r\n     * @private\r\n     * @template T\r\n     * @param {?} array\r\n     * @return {?}\r\n     */\r\n    function (array) {\r\n        return array[Math.floor(Math.random() * array.length)];\r\n    };\r\n    GamificationService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    GamificationService.ctorParameters = function () { return [\r\n        { type: HttpClient }\r\n    ]; };\r\n    /** @nocollapse */ GamificationService.ngInjectableDef = defineInjectable({ factory: function GamificationService_Factory() { return new GamificationService(inject(HttpClient)); }, token: GamificationService, providedIn: \"root\" });\r\n    return GamificationService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar pulseAnimation = animation([\r\n    style({ transform: 'scale(1)' }),\r\n    animate('{{ timings }}', keyframes([\r\n        style({ transform: 'scale(1)', offset: 0 }),\r\n        style({ transform: 'scale({{ scale }})', offset: 0.5 }),\r\n        style({ transform: 'scale(1)', offset: 1 })\r\n    ]))\r\n]);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar RewardDialogComponent = /** @class */ (function () {\r\n    function RewardDialogComponent(gamification, data) {\r\n        this.gamification = gamification;\r\n        this.data = data;\r\n        this.trivia = this.gamification.getTrivia();\r\n        this.thanksPic = this.gamification.getRandomGif('thanks');\r\n        this.moneyPic = this.gamification.getRandomGif('rich');\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RewardDialogComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.total = this.data.total;\r\n    };\r\n    RewardDialogComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'gl-reward-dialog',\r\n                    template: \"<h2 mat-dialog-title>Wohoo!</h2>\\n<mat-dialog-content>\\n  <p>\\n    Du hast weitere 5 Euro verdient! Damit hast du insgesamt\\n    <b>{{ total }} Euro</b> auf dem Konto!\\n  </p>\\n  <img src=\\\"{{ (moneyPic | async)?.images.original.url }}\\\" />\\n  <h3>Hast du gewusst?</h3>\\n  <p>{{ trivia | async }}</p>\\n  <!-- <h2>And also</h2>\\n  <img\\n    src=\\\"{{ (thanksPic | async)?.images.original.url }}\\\"\\n    alt=\\\"Belohnungs-GIF\\\"\\n    width=\\\"75%\\\"\\n  /> -->\\n</mat-dialog-content>\\n\",\r\n                    styles: [\"\"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    RewardDialogComponent.ctorParameters = function () { return [\r\n        { type: GamificationService },\r\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }\r\n    ]; };\r\n    return RewardDialogComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar QuestionRoomComponent = /** @class */ (function () {\r\n    function QuestionRoomComponent(question, dialog, snack, gf) {\r\n        this.question = question;\r\n        this.dialog = dialog;\r\n        this.snack = snack;\r\n        this.gf = gf;\r\n        this.currentQuestion = 0;\r\n        this.tempAnswers = [];\r\n        this.isLoading = false;\r\n        this.showProgressbar = true;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    QuestionRoomComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.doUpdateRewards();\r\n        this.thanksGif = this.gf.getRandomGif('party');\r\n        console.log(this.done, this.maxProgress);\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    QuestionRoomComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        if (changes.done) {\r\n            this.doUpdateRewards();\r\n        }\r\n        if (changes.currentInstance) {\r\n            this.isLoading = false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    QuestionRoomComponent.prototype.isDone = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return !(this.done < this.maxProgress);\r\n    };\r\n    /**\r\n     * @param {?} answer\r\n     * @return {?}\r\n     */\r\n    QuestionRoomComponent.prototype.sendAnswer = /**\r\n     * @param {?} answer\r\n     * @return {?}\r\n     */\r\n    function (answer) {\r\n        /** @type {?} */\r\n        var answersToBackend = this.tempAnswers.concat(this.createAnswer(answer));\r\n        this.tempAnswers = [];\r\n        this.question.handleSubmittedAnswers(answersToBackend);\r\n    };\r\n    /**\r\n     * @param {?} reward\r\n     * @return {?}\r\n     */\r\n    QuestionRoomComponent.prototype.claimReward = /**\r\n     * @param {?} reward\r\n     * @return {?}\r\n     */\r\n    function (reward) {\r\n        if (reward.unlocked) {\r\n            this.dialog.open(RewardDialogComponent, {\r\n                data: { total: reward.total }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Handle keyboard interaction\r\n     * Only working hardcoded for binary atm\r\n     */\r\n    /**\r\n     * Handle keyboard interaction\r\n     * Only working hardcoded for binary atm\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    QuestionRoomComponent.prototype.onKey = /**\r\n     * Handle keyboard interaction\r\n     * Only working hardcoded for binary atm\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        if (this.answerMode !== 'binary') {\r\n            return false;\r\n        }\r\n        switch (event.key) {\r\n            case 'ArrowLeft':\r\n                this.submitAnswer('yes');\r\n                break;\r\n            case 'ArrowRight':\r\n                this.submitAnswer('no');\r\n                break;\r\n            case 'ArrowUp':\r\n                this.submitAnswer('maybe');\r\n                break;\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} answer\r\n     * @return {?}\r\n     */\r\n    QuestionRoomComponent.prototype.createAnswer = /**\r\n     * @private\r\n     * @param {?} answer\r\n     * @return {?}\r\n     */\r\n    function (answer) {\r\n        /** @type {?} */\r\n        var newAnswer;\r\n        newAnswer = {\r\n            documentId: this.currentInstance.id,\r\n            questionId: this.questions[this.currentQuestion],\r\n            answer: answer\r\n        };\r\n        return newAnswer;\r\n    };\r\n    // Tracking the temp rewards is necessary to react to unlocked rewards\r\n    // This might need an overhaul since it's too complicated\r\n    // Tracking the temp rewards is necessary to react to unlocked rewards\r\n    // This might need an overhaul since it's too complicated\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    QuestionRoomComponent.prototype.updateRewards = \r\n    // Tracking the temp rewards is necessary to react to unlocked rewards\r\n    // This might need an overhaul since it's too complicated\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var locked = this.rewards.filter(function (reward) { return reward.unlocked === false; });\r\n        /** @type {?} */\r\n        var tmpLocked = locked;\r\n        this.doUpdateRewards();\r\n        this.lockedRewards = this.rewards.filter(function (reward) { return reward.unlocked === false; });\r\n        if (this.lockedRewards.length < tmpLocked.length) {\r\n            this.claimReward(tmpLocked[0]);\r\n        }\r\n        console.log(this.lockedRewards, tmpLocked);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    QuestionRoomComponent.prototype.doUpdateRewards = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var locked = this.rewards.filter(function (reward) { return reward.unlocked === false; });\r\n        // Update unlock status flag on all rewards\r\n        locked.forEach(function (reward) {\r\n            if ((_this.done / _this.maxProgress) * 100 >= reward.position) {\r\n                reward.unlocked = true;\r\n                console.log(reward);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} answer\r\n     * @return {?}\r\n     */\r\n    QuestionRoomComponent.prototype.submitAnswer = /**\r\n     * @param {?} answer\r\n     * @return {?}\r\n     */\r\n    function (answer) {\r\n        if (this.currentQuestion + 1 < this.questions.length) {\r\n            this.tempAnswers = __spread(this.tempAnswers, [this.createAnswer(answer)]);\r\n            this.currentQuestion++;\r\n        }\r\n        else {\r\n            this.isLoading = true;\r\n            // One Iteration of Question-Package done\r\n            this.sendAnswer(answer);\r\n            this.currentQuestion = 0;\r\n            this.done++;\r\n            this.updateRewards();\r\n        }\r\n        // this.mockAchievementCheck();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    QuestionRoomComponent.prototype.mockAchievementCheck = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (Math.random() < 0.05) {\r\n            /** @type {?} */\r\n            var percent = Math.floor(Math.random() * 25) + 75;\r\n            this.snack.open(percent + '% deiner Kollegen wählten dasselbe 😁', 'OK', {\r\n                duration: 2000\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    QuestionRoomComponent.prototype.finish = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        window.open('https://goo.gl/forms/BzagdIsUOy6hA2wB2', '_blank');\r\n    };\r\n    QuestionRoomComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'gl-question-room',\r\n                    template: \"<section\\r\\n  (keyup)=\\\"onKey($event)\\\"\\r\\n  class=\\\"content\\\"\\r\\n  *ngIf=\\\"currentInstance\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n>\\r\\n  <div class=\\\"progressbar-container\\\" *ngIf=\\\"showProgressbar\\\">\\r\\n    <span class=\\\"progress-label\\\">{{ done }} / {{ maxProgress }}</span>\\r\\n\\r\\n    <mat-progress-bar\\r\\n      mode=\\\"determinate\\\"\\r\\n      value=\\\"{{ (done / maxProgress) * 100 }}\\\"\\r\\n    ></mat-progress-bar>\\r\\n    <div\\r\\n      class=\\\"reward-icon\\\"\\r\\n      *ngFor=\\\"let reward of rewards\\\"\\r\\n      [ngStyle]=\\\"{ 'left.%': reward.position }\\\"\\r\\n    >\\r\\n      <i\\r\\n        class=\\\"fas fa-gift\\\"\\r\\n        [@unlockReward]=\\\"reward.unlocked\\\"\\r\\n        [ngClass]=\\\"{ unlocked: reward.unlocked }\\\"\\r\\n        [matTooltip]=\\\"\\r\\n          reward.unlocked ? reward.total + ' Euro' : 'Noch nicht erreicht!'\\r\\n        \\\"\\r\\n      ></i>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <mat-card class=\\\"text-card\\\" *ngIf=\\\"!isDone(); else lablingDone\\\">\\r\\n    <!-- <p *ngIf=\\\"!isDone(); else labelingDone\\\" [@fadeIn]=\\\"done\\\"> -->\\r\\n    <p *ngIf=\\\"!isLoading; else loading\\\">\\r\\n      {{ currentInstance.text }}\\r\\n    </p>\\r\\n    <ng-template #loading>\\r\\n      <div class=\\\"spinner-container\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n  </mat-card>\\r\\n\\r\\n  <ng-template #lablingDone>\\r\\n    <mat-card class=\\\"labeling-done-card\\\">\\r\\n      <mat-card-header>\\r\\n        <mat-card-title>Du hast es geschafft!</mat-card-title>\\r\\n      </mat-card-header>\\r\\n      <img\\r\\n        mat-card-image\\r\\n        src=\\\"{{ (thanksGif | async)?.images.original.url }}\\\"\\r\\n      />\\r\\n      <mat-card-content>\\r\\n        <p>\\r\\n          But wait! Um Deine Arbeit abzuschlie\\u00DFen, nimm dir bitte noch 1-2\\r\\n          Minuten f\\u00FCr diesen Fragebogen.\\r\\n        </p>\\r\\n      </mat-card-content>\\r\\n      <mat-card-actions>\\r\\n        <button\\r\\n          mat-raised-button\\r\\n          (click)=\\\"finish()\\\"\\r\\n          style=\\\"width: 100%\\\"\\r\\n          color=\\\"primary\\\"\\r\\n        >\\r\\n          Arbeit abschlie\\u00DFen\\r\\n        </button>\\r\\n      </mat-card-actions>\\r\\n    </mat-card>\\r\\n  </ng-template>\\r\\n\\r\\n  <mat-card class=\\\"question-card\\\" *ngIf=\\\"!isDone()\\\">\\r\\n    <mat-progress-bar\\r\\n      mode=\\\"determinate\\\"\\r\\n      value=\\\"{{ ((currentQuestion + 1) / questions.length) * 100 }}\\\"\\r\\n    ></mat-progress-bar>\\r\\n    <div class=\\\"question-card-wrapper\\\">\\r\\n      <mat-card-header class=\\\"question-text\\\">\\r\\n        <mat-card-title>\\r\\n          <span [innerHtml]=\\\"questions[currentQuestion] | translate\\\"></span>\\r\\n        </mat-card-title>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content>\\r\\n        <mat-card-actions\\r\\n          *ngIf=\\\"answerMode === 'binary'\\\"\\r\\n          class=\\\"answer-buttons-container\\\"\\r\\n        >\\r\\n          <button\\r\\n            mat-button\\r\\n            *ngFor=\\\"let answer of answers\\\"\\r\\n            class=\\\"answer-button\\\"\\r\\n            [ngClass]=\\\"answer\\\"\\r\\n            (click)=\\\"submitAnswer(answer)\\\"\\r\\n          >\\r\\n            {{ answer | translate }}\\r\\n          </button>\\r\\n        </mat-card-actions>\\r\\n        <mat-card-actions\\r\\n          *ngIf=\\\"answerMode === 'stars'\\\"\\r\\n          class=\\\"answer-buttons-container\\\"\\r\\n        >\\r\\n          <!-- <button mat-button disabled class=\\\"rating-info\\\">Wenig</button> -->\\r\\n          <button\\r\\n            mat-button\\r\\n            *ngFor=\\\"let answer of answers\\\"\\r\\n            class=\\\"answer-button\\\"\\r\\n            [ngClass]=\\\"answer\\\"\\r\\n            (click)=\\\"submitAnswer(answer)\\\"\\r\\n          >\\r\\n            {{ answer | translate }}\\r\\n          </button>\\r\\n          <!-- <button mat-button disabled class=\\\"rating-info\\\">Viel</button> -->\\r\\n        </mat-card-actions>\\r\\n      </mat-card-content>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n</section>\\r\\n\",\r\n                    animations: [\r\n                        trigger('fadeIn', [\r\n                            transition(':increment', [\r\n                                animate('500ms', keyframes([\r\n                                    style({ opacity: '1' }),\r\n                                    style({ opacity: '0' }),\r\n                                    style({ opacity: '1' })\r\n                                ]))\r\n                            ])\r\n                        ]),\r\n                        trigger('unlockReward', [\r\n                            transition('false => true', [\r\n                                useAnimation(pulseAnimation, {\r\n                                    params: {\r\n                                        timings: '400ms cubic-bezier(.11,.99,.83,.43)',\r\n                                        scale: 1.5\r\n                                    }\r\n                                })\r\n                            ])\r\n                        ])\r\n                    ],\r\n                    styles: [\".content{display:-ms-grid;display:grid;-ms-grid-rows:100px 400px 30px 1fr 30px 60px;grid-template-rows:100px 400px 30px 1fr 30px 60px;-ms-grid-columns:1fr;grid-template-columns:1fr}.content:focus{outline:solid 0}.question-text{justify-content:center}.question-text mat-card-title{font-weight:400}.question-card-wrapper{padding:16px 16px 0}.progressbar-container{-ms-grid-row:1;-ms-grid-row-span:1;grid-row:1/2;-ms-grid-row-align:center;align-self:center;position:relative;text-align:center}.progressbar-container mat-progress-bar{margin-bottom:8px}.progressbar-container .reward-icon{display:block;position:absolute;-webkit-transform:translateX(-50%);transform:translateX(-50%);cursor:pointer;color:#9c9c9c}.progressbar-container .unlocked{color:#3f51b5}.progress-label{font-weight:700;line-height:2}.text-card{display:flex;justify-content:center;-ms-grid-row:2;-ms-grid-row-span:1;grid-row:2/3;overflow:auto}.question-area{-ms-grid-row:4;-ms-grid-row-span:3;grid-row:4/7}.question-card{-ms-grid-row:4;-ms-grid-row-span:1;grid-row:4/5;padding:0}.button-list,.submit-button{-ms-grid-row:6;-ms-grid-row-span:1;grid-row:6/7;-ms-grid-row-align:stretch;align-self:stretch;-ms-grid-column-align:stretch;justify-self:stretch}.mat-card-header-text{text-align:center}.answer-buttons-container{display:flex}.answer-buttons-container .yes{flex-grow:1}.answer-buttons-container .maybe{flex-grow:.5}.answer-buttons-container .no{flex-grow:1}.answer-buttons-container .answer-button{height:60px;flex-grow:1}.answer-buttons-container .rating-info{flex-grow:1;color:#9c9c9c}.spinner-container{text-align:center;-ms-grid-row-align:center;align-self:center}.spinner-container mat-spinner{margin:auto}.labeling-done-card{width:50%;margin-left:auto;margin-right:auto}\"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    QuestionRoomComponent.ctorParameters = function () { return [\r\n        { type: QuestionService },\r\n        { type: MatDialog },\r\n        { type: MatSnackBar },\r\n        { type: GamificationService }\r\n    ]; };\r\n    QuestionRoomComponent.propDecorators = {\r\n        maxProgress: [{ type: Input }],\r\n        done: [{ type: Input }],\r\n        currentInstance: [{ type: Input }],\r\n        rewards: [{ type: Input }],\r\n        questions: [{ type: Input }],\r\n        answers: [{ type: Input }],\r\n        showProgressbar: [{ type: Input }],\r\n        answerMode: [{ type: Input }],\r\n        selection: [{ type: ViewChild, args: ['selectionList',] }]\r\n    };\r\n    return QuestionRoomComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar UserService = /** @class */ (function () {\r\n    function UserService() {\r\n    }\r\n    UserService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    UserService.ctorParameters = function () { return []; };\r\n    /** @nocollapse */ UserService.ngInjectableDef = defineInjectable({ factory: function UserService_Factory() { return new UserService(); }, token: UserService, providedIn: \"root\" });\r\n    return UserService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NavbarComponent = /** @class */ (function () {\r\n    function NavbarComponent(user, gamificationService) {\r\n        this.user = user;\r\n        this.gamificationService = gamificationService;\r\n        this.gamification = this.gamificationService;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NavbarComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    NavbarComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'gl-navbar',\r\n                    template: \"<!--\\r\\n  <mat-toolbar color=\\\"primary\\\">\\r\\n    <span class=\\\"spacer\\\"></span>\\r\\n\\r\\n    <div *ngIf=\\\"user.isLogged(); else: notLogged\\\">\\r\\n      <gl-score-display></gl-score-display>\\r\\n      <button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"toolbar-item\\\" mat-icon-button>\\r\\n        <mat-icon matBadge=\\\"4\\\" matBadgeColor=\\\"accent\\\">person</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #notLogged> <button mat-button>Login</button> </ng-template>\\r\\n  </mat-toolbar>\\r\\n  <mat-menu #menu=\\\"matMenu\\\">\\r\\n    <button mat-menu-item disabled>Kontostand</button>\\r\\n    <button mat-menu-item disabled>Katzenvideos</button>\\r\\n    <button\\r\\n      mat-menu-item\\r\\n      routerLinkActive=\\\"router-link-active\\\"\\r\\n      (click)=\\\"user.logout()\\\"\\r\\n    >\\r\\n      Logout\\r\\n    </button>\\r\\n  </mat-menu>\\r\\n-->\\r\\n\",\r\n                    styles: [\".spacer{flex:1 1 auto}.toolbar-item{margin:0 14px}\"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    NavbarComponent.ctorParameters = function () { return [\r\n        { type: UserService },\r\n        { type: GamificationService }\r\n    ]; };\r\n    return NavbarComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ChartComponent = /** @class */ (function () {\r\n    function ChartComponent() {\r\n        this.view = undefined;\r\n        // options\r\n        this.showXAxis = true;\r\n        this.showYAxis = true;\r\n        this.gradient = false;\r\n        this.showLegend = true;\r\n        this.showXAxisLabel = true;\r\n        this.xAxisLabel = 'Number';\r\n        this.showYAxisLabel = true;\r\n        this.yAxisLabel = 'Color Value';\r\n        this.timeline = true;\r\n        this.colorScheme = {\r\n            domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\r\n        };\r\n        this.multi = [\r\n            {\r\n                name: 'Accuracy',\r\n                value: 83\r\n            },\r\n            {\r\n                name: 'F1 Score',\r\n                value: 91\r\n            }\r\n        ];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ChartComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    ChartComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'gl-chart',\r\n                    template: \"<!--\\r\\n  <ngx-charts-number-card [view]=\\\"view\\\" [scheme]=\\\"colorScheme\\\" [results]=\\\"multi\\\" [cardColor]=\\\"'#263238'\\\" [textColor]=\\\"'white'\\\"></ngx-charts-number-card>\\r\\n-->\\r\\n\",\r\n                    styles: [\"\"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    ChartComponent.ctorParameters = function () { return []; };\r\n    return ChartComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ScoreDisplayComponent = /** @class */ (function () {\r\n    function ScoreDisplayComponent(gamification) {\r\n        this.gamification = gamification;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ScoreDisplayComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    ScoreDisplayComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'gl-score-display',\r\n                    template: \"<div class=\\\"align-vert\\\" [@scoreChange]=\\\"gamification.score$ | async\\\">\\r\\n  <mat-icon>star</mat-icon>\\r\\n  <span>{{ gamification.score$ | async }}</span>\\r\\n</div>\\r\\n\",\r\n                    animations: [\r\n                        trigger('scoreChange', [\r\n                            transition(':increment', useAnimation(pulseAnimation, {\r\n                                params: {\r\n                                    timings: '400ms cubic-bezier(.11,.99,.83,.43)',\r\n                                    scale: 1.25\r\n                                }\r\n                            }))\r\n                        ])\r\n                    ],\r\n                    styles: [\".align-vert{display:inline-flex;vertical-align:middle;align-items:center}\"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    ScoreDisplayComponent.ctorParameters = function () { return [\r\n        { type: GamificationService }\r\n    ]; };\r\n    return ScoreDisplayComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Very quick and dirty solution to \"translate\" Ids from backend\r\n * Angular i18n currently can't translate variables\r\n * ngx-translate would add another dependency\r\n */\r\nvar TranslatePipe = /** @class */ (function () {\r\n    function TranslatePipe() {\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @param {?=} args\r\n     * @return {?}\r\n     */\r\n    TranslatePipe.prototype.transform = /**\r\n     * @param {?} value\r\n     * @param {?=} args\r\n     * @return {?}\r\n     */\r\n    function (value, args) {\r\n        switch (value) {\r\n            case 'isEvent':\r\n                return 'Beschreibt der Text eine <b>Veranstaltung</b>?';\r\n            case 'isMusic':\r\n                return 'Geht es inhaltlich um <b>Musik</b>?';\r\n            case 'isMovie':\r\n                return 'Geht es inhaltlich um <b>Filme</b>?';\r\n            case 'yes':\r\n                return 'Ja';\r\n            case 'no':\r\n                return 'Nein';\r\n            case 'maybe':\r\n                return 'Unklar';\r\n            case '1':\r\n                return 'Trifft nicht zu';\r\n            case '2':\r\n                return 'Trifft eher nicht zu';\r\n            case '3':\r\n                return 'Weiß nicht';\r\n            case '4':\r\n                return 'Trifft eher zu';\r\n            case '5':\r\n                return 'Trifft zu';\r\n            default:\r\n                return value;\r\n        }\r\n    };\r\n    TranslatePipe.decorators = [\r\n        { type: Pipe, args: [{\r\n                    name: 'translate'\r\n                },] }\r\n    ];\r\n    return TranslatePipe;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar MaterialModules = [\r\n    MatInputModule,\r\n    MatProgressBarModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatGridListModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    LayoutModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatBadgeModule,\r\n    MatListModule,\r\n    MatProgressSpinnerModule,\r\n    MatTooltipModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule\r\n];\r\nvar GLModule = /** @class */ (function () {\r\n    function GLModule() {\r\n    }\r\n    GLModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [\r\n                        RootComponent,\r\n                        DashboardComponent,\r\n                        LeaderboardComponent,\r\n                        QuestionRoomComponent,\r\n                        NavbarComponent,\r\n                        ChartComponent,\r\n                        ScoreDisplayComponent,\r\n                        RewardDialogComponent,\r\n                        TranslatePipe\r\n                    ],\r\n                    imports: [\r\n                        BrowserModule,\r\n                        BrowserAnimationsModule,\r\n                        MaterialModules,\r\n                        HttpClientModule,\r\n                        FormsModule\r\n                        // NgxChartsModule\r\n                    ],\r\n                    providers: [],\r\n                    bootstrap: [RootComponent],\r\n                    exports: [RootComponent, QuestionRoomComponent, ScoreDisplayComponent],\r\n                    entryComponents: [QuestionRoomComponent, RewardDialogComponent]\r\n                },] }\r\n    ];\r\n    return GLModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CommunicationService = /** @class */ (function () {\r\n    function CommunicationService(http) {\r\n        this.http = http;\r\n        this.data = [];\r\n    }\r\n    /**\r\n     * @param {?=} src\r\n     * @return {?}\r\n     */\r\n    CommunicationService.prototype.loadData = /**\r\n     * @param {?=} src\r\n     * @return {?}\r\n     */\r\n    function (src) {\r\n        var _this = this;\r\n        if (src === void 0) { src = URL_TO_DATA; }\r\n        return this.http\r\n            .get(URL_TO_DATA)\r\n            .pipe(map(function (res) { return _this.enhanceFeatures(res); }));\r\n    };\r\n    /** Mocking data to add unlabeled data and selectionScore (entropy) */\r\n    /**\r\n     * Mocking data to add unlabeled data and selectionScore (entropy)\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    CommunicationService.prototype.enhanceFeatures = /**\r\n     * Mocking data to add unlabeled data and selectionScore (entropy)\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        /** @type {?} */\r\n        var features = data;\r\n        for (var i = 0; i < features.length / 2; i++) {\r\n            features[i]['features'][1][UNLABELED_INDEX] = 0;\r\n            features[i]['features'][1][ENTROPY_INDEX] = Math.random();\r\n        }\r\n        return features;\r\n    };\r\n    CommunicationService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    CommunicationService.ctorParameters = function () { return [\r\n        { type: HttpClient }\r\n    ]; };\r\n    /** @nocollapse */ CommunicationService.ngInjectableDef = defineInjectable({ factory: function CommunicationService_Factory() { return new CommunicationService(inject(HttpClient)); }, token: CommunicationService, providedIn: \"root\" });\r\n    return CommunicationService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { GLModule, RootComponent, QuestionRoomComponent, ScoreDisplayComponent, NavbarComponent, LeaderboardComponent, ChartComponent, DashboardComponent, CommunicationService, QuestionService, UserService, GamificationService, RewardDialogComponent as ɵb, pulseAnimation as ɵa, TranslatePipe as ɵc };\n\n//# sourceMappingURL=gamifilearning-lib.js.map","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LabelingComponent } from './labeling/labeling.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { LoggedOutComponent } from './logged-out/logged-out.component';\r\nimport { CoffeeComponent } from './coffee/coffee.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  { path: 'labeling', component: LabelingComponent, canActivate: [AuthGuard] },\r\n  { path: 'loggedOut', component: LoggedOutComponent },\r\n  { path: 'coffee', component: CoffeeComponent },\r\n  { path: '', pathMatch: 'full', redirectTo: '/labeling' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'labelchecker';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { GLModule } from 'gamifilearning-lib';\r\nimport { GraphQLModule } from './graphql.module';\r\nimport { LabelingComponent } from './labeling/labeling.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport {\r\n  MatFormFieldModule,\r\n  MatToolbarModule,\r\n  MatCardModule,\r\n  MatProgressSpinnerModule,\r\n  MatMenuModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatInputModule,\r\n  MatBadgeModule,\r\n  MatDialogModule\r\n} from '@angular/material';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LoggedOutComponent } from './logged-out/logged-out.component';\r\nimport { HelpComponent } from './help/help.component';\r\nimport { BlockedDialogComponent } from './blocked-dialog/blocked-dialog.component';\r\nimport { CoffeeComponent } from './coffee/coffee.component';\r\n\r\nconst MaterialModules = [\r\n  MatToolbarModule,\r\n  MatCardModule,\r\n  MatFormFieldModule,\r\n  MatProgressSpinnerModule,\r\n  MatMenuModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatInputModule,\r\n  MatBadgeModule,\r\n  MatDialogModule\r\n];\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LabelingComponent,\r\n    LoginComponent,\r\n    NavbarComponent,\r\n    LoggedOutComponent,\r\n    HelpComponent,\r\n    BlockedDialogComponent,\r\n    CoffeeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    GLModule,\r\n    GraphQLModule,\r\n    MaterialModules,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [HelpComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private user: AuthService, private router: Router) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.user.isLogged()) {\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport gql from 'graphql-tag';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { Apollo } from 'apollo-angular';\r\nimport { User } from '../communication/communication.interfaces';\r\nimport { MatDialog } from '@angular/material';\r\nimport { BlockedDialogComponent } from '../blocked-dialog/blocked-dialog.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  user: User;\r\n\r\n  constructor(private apollo: Apollo, private dialog: MatDialog) {}\r\n\r\n  login(username: string, password: string): Observable<User> {\r\n    const response = this.apollo\r\n      .query({\r\n        query: gql`\r\n           {\r\n             login(username: \"${username}\", password: \"${password}\") {\r\n               id,\r\n               username,\r\n               jwtToken {\r\n                 token\r\n               }\r\n             }\r\n           }\r\n         `\r\n      })\r\n      .pipe(\r\n        map((res: any) => {\r\n          console.log(res);\r\n          this.user = res.data.login;\r\n          this.doLogin(this.user);\r\n          return this.user;\r\n        })\r\n        // catchError((err, x) => {\r\n        //   // if (err.error.errors[0].extensions === 'Login blocked') {\r\n        //   //   this.dialog.open(BlockedDialogComponent, {\r\n        //   //     data: { message: err.error.errors[0].message }\r\n        //   //   });\r\n        //   // }\r\n        //   console.log('Blocked', err);\r\n        //   return throwError(err);\r\n        // })\r\n      );\r\n    return response;\r\n  }\r\n\r\n  logout(): void {\r\n    this.apollo\r\n      .query({\r\n        query: gql`\r\n          {\r\n            logout\r\n          }\r\n        `\r\n      })\r\n      .subscribe(\r\n        _ => {\r\n          // TODO: Logout throws error when token expired?\r\n          this.doLogout();\r\n        },\r\n        err => {\r\n          console.error(err);\r\n          // logout when expired too;\r\n          this.doLogout();\r\n        }\r\n      );\r\n  }\r\n\r\n  getUsername(): string | number | null {\r\n    return window.localStorage.getItem('username') || '';\r\n  }\r\n\r\n  isLogged(): boolean {\r\n    return window.localStorage.getItem('token') ? true : false;\r\n  }\r\n\r\n  private doLogin(user: User) {\r\n    window.localStorage.setItem('token', user.jwtToken.token);\r\n    window.localStorage.setItem('username', user.username.toString());\r\n  }\r\n\r\n  private doLogout() {\r\n    window.localStorage.removeItem('token');\r\n    window.localStorage.removeItem('username');\r\n  }\r\n}\r\n\r\nexport function handleError(err) {}\r\n","module.exports = \"<p>\\r\\n  {{ message }}\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jsb2NrZWQtZGlhbG9nL2Jsb2NrZWQtZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-blocked-dialog',\r\n  templateUrl: './blocked-dialog.component.html',\r\n  styleUrls: ['./blocked-dialog.component.scss']\r\n})\r\nexport class BlockedDialogComponent implements OnInit {\r\n  message;\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {}\r\n\r\n  ngOnInit() {\r\n    this.message = this.data.message;\r\n  }\r\n}\r\n","module.exports = \"<mat-card>\\r\\n  <mat-card-title>Gönn dir eine Pause :)</mat-card-title>\\r\\n  <img\\r\\n    src=\\\"{{ (coffeeGif | async)?.images.original.url }}\\\"\\r\\n    alt=\\\"coffee\\\"\\r\\n    mat-card-image\\r\\n  />\\r\\n  <p>{{ message }}</p>\\r\\n</mat-card>\\r\\n\"","module.exports = \"mat-card {\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 20px;\\n  width: 600px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29mZmVlL0M6XFxVc2Vyc1xcZHVjYW5oLnRyaW5oXFxwcm9qZWN0c1xcbGFiZWxjaGVja2VyL3NyY1xcYXBwXFxjb2ZmZWVcXGNvZmZlZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVFLGtCQUFpQjtFQUNqQixtQkFBa0I7RUFDbEIsaUJBQWdCO0VBRWhCLGFBQVksRUFDYiIsImZpbGUiOiJzcmMvYXBwL2NvZmZlZS9jb2ZmZWUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XHJcbiAgLy8gICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICBtYXJnaW4tbGVmdDogYXV0bztcclxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgbWFyZ2luLXRvcDogMjBweDtcclxuICAvLyAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgd2lkdGg6IDYwMHB4O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { GamificationService } from 'gamifilearning-lib';\r\n\r\n@Component({\r\n  selector: 'app-coffee',\r\n  templateUrl: './coffee.component.html',\r\n  styleUrls: ['./coffee.component.scss']\r\n})\r\nexport class CoffeeComponent implements OnInit {\r\n  coffeeGif;\r\n  message;\r\n  constructor(private gf: GamificationService) {}\r\n\r\n  ngOnInit() {\r\n    this.coffeeGif = this.gf.getRandomGif('coffee');\r\n    this.message = localStorage.getItem('block_message');\r\n    console.log(this.coffeeGif);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Document, Progress, Answer } from './communication.interfaces';\r\nimport { Apollo } from 'apollo-angular';\r\nimport gql from 'graphql-tag';\r\nimport { Observable, of, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommunicationService {\r\n  private currentDocument = new BehaviorSubject<Document>(null);\r\n  currentDocument$ = this.currentDocument.asObservable();\r\n  mockProgress: Progress = {\r\n    total: 1500,\r\n    done: 99\r\n  };\r\n  constructor(\r\n    private apollo: Apollo,\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private http: HttpClient\r\n  ) {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.getNextDocument().subscribe(\r\n      doc => {\r\n        // this.currentDocument.next(doc);\r\n      },\r\n      // Kinda hacky. Logout should be handled\r\n      err => {\r\n        this.auth.logout();\r\n        this.router.navigate(['login']);\r\n      }\r\n    );\r\n  }\r\n\r\n  getNextDocument(): Observable<Document> {\r\n    return this.apollo\r\n      .query({\r\n        query: gql`\r\n          {\r\n            getNextDocumentToLabel {\r\n              id\r\n              text\r\n            }\r\n          }\r\n        `\r\n      })\r\n      .pipe(\r\n        map((res: any) => {\r\n          const nextDoc = {\r\n            id: res.data.getNextDocumentToLabel.id,\r\n            text: res.data.getNextDocumentToLabel.text\r\n          };\r\n          this.currentDocument.next(nextDoc);\r\n          return nextDoc;\r\n        })\r\n      );\r\n\r\n    // Mock\r\n    // return this.http\r\n    //   .get<string>('https://icanhazdadjoke.com/', {\r\n    //     headers: new HttpHeaders({\r\n    //       Accept: 'application/json'\r\n    //     })\r\n    //   })\r\n    //   .pipe(\r\n    //     map((res: any) => {\r\n    //       const nextDoc = {\r\n    //         id: Math.floor(Math.random() * 100).toString(),\r\n    //         text: res.joke\r\n    //       };\r\n    //       this.currentDocument.next(nextDoc);\r\n    //       return nextDoc;\r\n    //     })\r\n    //   );\r\n  }\r\n\r\n  getProgress(): Observable<Progress> {\r\n    return this.apollo\r\n      .query({\r\n        query: gql`\r\n          {\r\n            getProgress {\r\n              total\r\n              done\r\n            }\r\n          }\r\n        `\r\n      })\r\n      .pipe(map((res: any) => res.data.getProgress));\r\n\r\n    // Mock\r\n    // return of(this.mockProgress);\r\n  }\r\n\r\n  getQuestionIds(): Observable<string[]> {\r\n    // return this.apollo\r\n    //   .query({\r\n    //     query: gql`\r\n    //       {\r\n    //         getQuestionIds\r\n    //       }\r\n    //     `\r\n    //   })\r\n    //   .pipe(map((res: any) => res.data));\r\n\r\n    // Mock\r\n    return of(['isMusic', 'isMovie', 'isEvent']);\r\n  }\r\n\r\n  getAnswers(): Observable<string[]> {\r\n    // return of(['yes', 'maybe', 'no']);\r\n    // return of(['1', '2', '3', '4', '5']);\r\n    return of(['1', '2', '3', '4', '5']);\r\n  }\r\n\r\n  saveAnswers(answers: Answer[]): Observable<boolean> {\r\n    if (answers.length) {\r\n      console.log('Sending to backend:', answers);\r\n      return this.apollo.mutate({\r\n        mutation: gql`\r\n          mutation saveDecision($decisions: [DecisionInput]!) {\r\n            saveDecision(decisions: $decisions)\r\n          }\r\n        `,\r\n        variables: {\r\n          decisions: answers\r\n        }\r\n        // optimisticResponse: {\r\n        //   data: {\r\n        //     saveAnswers: true\r\n        //   }\r\n        // }\r\n      });\r\n    } else {\r\n      return of(false);\r\n    }\r\n\r\n    // Mock\r\n    //   if (answers.length) {\r\n    //     console.log('Sending to backend:', answers);\r\n    //     return of(true);\r\n    //   } else {\r\n    //     return of(false);\r\n    //   }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ApolloModule, APOLLO_OPTIONS } from 'apollo-angular';\r\nimport { HttpLinkModule, HttpLink } from 'apollo-angular-link-http';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { setContext } from 'apollo-link-context';\r\nimport { onError } from 'apollo-link-error';\r\nimport { environment } from '../environments/environment';\r\n\r\nconst uri = environment.url;\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors) {\r\n    graphQLErrors.map(({ message, locations, path }) =>\r\n      console.log(\r\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\r\n      )\r\n    );\r\n  }\r\n  if (networkError) {\r\n    const err = networkError as any;\r\n    if (err.error.errors[0].extensions.code === 'Login blocked') {\r\n      window.location.replace('coffee');\r\n      localStorage.setItem('block_message', err.error.errors[0].message);\r\n    }\r\n    console.log(`[Network error]: ${JSON.stringify(err)}`);\r\n  }\r\n});\r\n\r\nexport function createApollo(httpLink: HttpLink) {\r\n  const http = httpLink.create({ uri: uri });\r\n  const defaultOptions = {\r\n    watchQuery: {\r\n      fetchPolicy: 'network-only',\r\n      errorPolicy: 'ignore'\r\n    },\r\n    query: {\r\n      fetchPolicy: 'network-only',\r\n      errorPolicy: 'all'\r\n    }\r\n  };\r\n\r\n  const auth = setContext(_ => {\r\n    // get the authentication token from local storage if it exists\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      return {};\r\n    } else {\r\n      return {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      };\r\n    }\r\n  });\r\n  return {\r\n    link: errorLink.concat(auth.concat(http)),\r\n    cache: new InMemoryCache(),\r\n    defaultOptions: defaultOptions\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  exports: [ApolloModule, HttpLinkModule],\r\n  providers: [\r\n    {\r\n      provide: APOLLO_OPTIONS,\r\n      useFactory: createApollo,\r\n      deps: [HttpLink]\r\n    }\r\n  ]\r\n})\r\nexport class GraphQLModule {}\r\n","module.exports = \"<h1 mat-dialog-title>Hilfe</h1>\\r\\n<mat-dialog-content>\\r\\n  <h3>Allgemein</h3>\\r\\n  <p>\\r\\n    Ziel dieses Tools ist es, Texte anhand von drei Fragen zu kategorisieren.\\r\\n    Die Fragen nach Musik, Film und Veranstaltung werden pro Text nacheinander\\r\\n    gestellt. Mögliche Antworten liegen auf einer Skala von \\\"trifft nicht zu\\\"\\r\\n    bis \\\"trifft zu\\\". Wie diese Entscheidungen getroffen werden, wird in den\\r\\n    folgenden Unterpunkten erklärt.\\r\\n  </p>\\r\\n  <p>\\r\\n    Sollte die Anwendung mal Probleme bereiten, kann sie einfach im Browser\\r\\n    neugestartet werden (F5) ohne den Fortschritt zu verlieren.\\r\\n  </p>\\r\\n  <p>\\r\\n    Anmerkung: Es kann immer nur eine Stunde am Stück gearbeitet werden, danach\\r\\n    erfolgt ein automatischer Logout und es muss eine Pause von mindestens einer\\r\\n    Stunde gemacht werden. Danach ist ein erneuter Login möglich und es kann\\r\\n    weitergearbeitet werden.\\r\\n  </p>\\r\\n\\r\\n  <h3>Geht es inhaltlich um Musik?</h3>\\r\\n  <p>\\r\\n    Die Frage sollte mit \\\"trifft zu\\\" beantwortet werden, wenn im Text explizit\\r\\n    Musik beschrieben wird. Sie sollte mit \\\"trifft nicht zu\\\" beantwortet werden,\\r\\n    wenn der Text generell nichts mit Musik zu tun hat. Bei Unsicherheit sollte\\r\\n    eine der Zwischenstufen gewählt werden.\\r\\n  </p>\\r\\n\\r\\n  <h4>Beispiel für \\\"trifft zu\\\":</h4>\\r\\n  <p>\\r\\n    Fünfzehn Jahre Foo Fighters – ein geeigneter Zeitpunkt für einen Blick\\r\\n    zurück. Einige Highlights: In den vergangenen eineinhalb Dekaden erreichten\\r\\n    sechs Alben der Band alleine in den USA Platinstatus. Für all diejenigen,\\r\\n    denen das Musikgenre »Rock’n’Roll« bis dato noch fremd ist, hier eine\\r\\n    Kurzusammenfassung der bisherigen Foo-Karriere ...\\r\\n  </p>\\r\\n\\r\\n  <h4>\\r\\n    Beispiel für \\\"trifft nicht zu\\\":\\r\\n  </h4>\\r\\n  <p>\\r\\n    Wir laden recht herzlich zum siebten Sportfest der Turbine zum Sportplatz am\\r\\n    Wald ein. Neben dem Pokalspiel der D-Jugend sind auch Freundschaftsspiele\\r\\n    der alten Herren dabei.\\r\\n  </p>\\r\\n\\r\\n  <h3>Geht es inhaltlich um Filme?</h3>\\r\\n  <p>\\r\\n    Die Frage sollte mit \\\"trifft zu\\\" beantwortet werden, wenn ein Text Filmbezug\\r\\n    hat. Sie sollte mit \\\"trifft nicht zu\\\" beantwortet werden, wenn der Text\\r\\n    generell nichts mit Film zu tun hat. Bei Unsicherheit sollte eine der\\r\\n    Zwischenstufen gewählt werden.\\r\\n  </p>\\r\\n\\r\\n  <h4>Beispiel für \\\"trifft zu\\\":</h4>\\r\\n  <p>\\r\\n    Nicht hinsehen! … das gilt natürlich nur für die Protagonisten in Bird Box,\\r\\n    nicht für den geneigten Zuschauer! Bird Box gehört zu den Filmen, die\\r\\n    praktisch exklusiv über Streaming-Anbieter Netflix zu sehen sind.\\r\\n    Ursprünglich bereits ab 2013 in Planung – und zwar VOR dem Release der\\r\\n    Romanvorlage – war es Universal Pictures, die sich zunächst die\\r\\n    Verfilmungsrechte sicherten. ...\\r\\n  </p>\\r\\n\\r\\n  <h4>Beispiel für \\\"trifft nicht zu\\\":</h4>\\r\\n  <p>\\r\\n    Das Kino am Markt ist eines der ältesten in Deutschland. Seit Jahren ist es\\r\\n    renovierdungsbedürftig und nun hat sich ein Investor gefunden, der dem\\r\\n    Gebäude zu altem Glanz verhelfen soll.\\r\\n  </p>\\r\\n\\r\\n  <h3>Beschreibt der Text eine Veranstaltung?</h3>\\r\\n  <p>\\r\\n    Die Frage sollte mit \\\"trifft zu\\\" beantwortet werden, wenn explizit eine\\r\\n    Veranstaltung beschrieben wird. Sie sollte mit \\\"trifft nicht zu\\\" beantwortet\\r\\n    werden, wenn der Text generell nichts mit einer Veranstaltung zu tun hat.\\r\\n    Bei Unsicherheit sollte eine der Zwischenstufen gewählt werden.\\r\\n  </p>\\r\\n\\r\\n  <h4>Beispiel für \\\"trifft zu\\\":</h4>\\r\\n  <p>\\r\\n    Der 4. Jahrgang von PORTRAITS – HELLERAU Photography Award steht unter dem\\r\\n    Motto „Uncovered“. An zwei Ausstellungsorten werden am 07. März 2019 die\\r\\n    Finalist*innen präsentiert: um 18 Uhr in HELLERAU und um 20.30 Uhr im\\r\\n    Pumpenhaus an der Marienbrücke ...\\r\\n  </p>\\r\\n\\r\\n  <h4>Beispiel für \\\"trifft nicht zu\\\":</h4>\\r\\n  <p>\\r\\n    Jugenclub Plauen: Natürlich könnt Ihr Euch bei uns entspannen. Auf die Couch\\r\\n    setzen, Kakao schlürfen und bei guter Musik abschalten. WAS, Ihr wollt\\r\\n    Action? Okay, wir bieten Euch das volle Programm: Entscheiden müsst Ihr: *\\r\\n    Fitnessangebote & Proberaum für Breakdance... * Offener Cafébereich mit\\r\\n    Sofa- und Computerecke... * ...\\r\\n  </p>\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n  <div class=\\\"pusher\\\"></div>\\r\\n  <button mat-button mat-dialog-close cdkFocusInitial>Verstanden</button>\\r\\n</mat-dialog-actions>\\r\\n\"","module.exports = \"h4 {\\n  font-weight: 500; }\\n\\n.pusher {\\n  flex: 1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVscC9DOlxcVXNlcnNcXGR1Y2FuaC50cmluaFxccHJvamVjdHNcXGxhYmVsY2hlY2tlci9zcmNcXGFwcFxcaGVscFxcaGVscC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFnQixFQUNqQjs7QUFFRDtFQUNFLFFBQU8sRUFDUiIsImZpbGUiOiJzcmMvYXBwL2hlbHAvaGVscC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImg0IHtcclxuICBmb250LXdlaWdodDogNTAwO1xyXG59XHJcblxyXG4ucHVzaGVyIHtcclxuICBmbGV4OiAxO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.scss']\n})\nexport class HelpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n  <gl-question-room\\r\\n    [currentInstance]=\\\"currentInstance | async\\\"\\r\\n    [done]=\\\"(progress | async)?.done\\\"\\r\\n    [maxProgress]=\\\"(progress | async)?.total\\\"\\r\\n    [questions]=\\\"questions | async\\\"\\r\\n    [answers]=\\\"answers | async\\\"\\r\\n    [answerMode]=\\\"'stars'\\\"\\r\\n    [rewards]=\\\"rewards\\\"\\r\\n  ></gl-question-room>\\r\\n</div>\\r\\n\"","module.exports = \".wrapper {\\n  padding: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGFiZWxpbmcvQzpcXFVzZXJzXFxkdWNhbmgudHJpbmhcXHByb2plY3RzXFxsYWJlbGNoZWNrZXIvc3JjXFxhcHBcXGxhYmVsaW5nXFxsYWJlbGluZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWEsRUFDZCIsImZpbGUiOiJzcmMvYXBwL2xhYmVsaW5nL2xhYmVsaW5nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLndyYXBwZXIge1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { QuestionService } from 'gamifilearning-lib';\r\nimport { map, flatMap } from 'rxjs/operators';\r\nimport { CommunicationService } from '../communication/communication.service';\r\nimport { Answer } from '../communication/communication.interfaces';\r\nimport { REWARDS } from './rewards';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-labeling',\r\n  templateUrl: './labeling.component.html',\r\n  styleUrls: ['./labeling.component.scss']\r\n})\r\nexport class LabelingComponent implements OnInit, OnDestroy {\r\n  currentInstance;\r\n  questions;\r\n  progress;\r\n  rewards = REWARDS;\r\n  answers;\r\n  sub;\r\n  constructor(\r\n    private communication: CommunicationService,\r\n    private question: QuestionService,\r\n    private auth: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.currentInstance = this.communication.currentDocument$;\r\n    this.questions = this.communication.getQuestionIds();\r\n    this.progress = this.communication.getProgress();\r\n    this.answers = this.communication.getAnswers();\r\n\r\n    this.sub = this.question.answers$\r\n      .pipe(\r\n        flatMap((answers: Answer[]) => this.communication.saveAnswers(answers)),\r\n        flatMap(_ => this.communication.getNextDocument())\r\n      )\r\n      .subscribe(res => {\r\n        console.log(res);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  }\r\n}\r\n","export let REWARDS = [];\r\n\r\nfor (let x = 5; x < 75; x = x + 5) {\r\n  REWARDS.push({ position: (x * 100) / 75, unlocked: false, total: x });\r\n}\r\n","module.exports = \"<mat-card>\\r\\n  <p>Erfolgreich abgemeldet!</p>\\r\\n  <button mat-button routerLink=\\\"/login\\\">Erneut anmelden</button>\\r\\n</mat-card>\\r\\n\"","module.exports = \"mat-card {\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 20px;\\n  width: 400px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9nZ2VkLW91dC9DOlxcVXNlcnNcXGR1Y2FuaC50cmluaFxccHJvamVjdHNcXGxhYmVsY2hlY2tlci9zcmNcXGFwcFxcbG9nZ2VkLW91dFxcbG9nZ2VkLW91dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVFLGtCQUFpQjtFQUNqQixtQkFBa0I7RUFDbEIsaUJBQWdCO0VBRWhCLGFBQVksRUFDYiIsImZpbGUiOiJzcmMvYXBwL2xvZ2dlZC1vdXQvbG9nZ2VkLW91dC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jYXJkIHtcclxuICAvLyAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogYXV0bztcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIC8vICAgcGFkZGluZzogMjBweDtcclxuICB3aWR0aDogNDAwcHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logged-out',\n  templateUrl: './logged-out.component.html',\n  styleUrls: ['./logged-out.component.scss']\n})\nexport class LoggedOutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-card class=\\\"login-card\\\">\\n  <mat-card-header> <mat-card-title>Login</mat-card-title> </mat-card-header>\\n  <mat-card-content>\\n    <form>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Matrikelnummer\\\"\\n          [(ngModel)]=\\\"username\\\"\\n          name=\\\"username\\\"\\n          required\\n        />\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Passwort\\\"\\n          [(ngModel)]=\\\"password\\\"\\n          type=\\\"password\\\"\\n          name=\\\"password\\\"\\n          required\\n        />\\n      </mat-form-field>\\n    </form>\\n\\n    <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\">\\n      Anmelden\\n    </button>\\n  </mat-card-actions>\\n</mat-card>\\n\"","module.exports = \".login-card {\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 20px;\\n  width: 400px; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vQzpcXFVzZXJzXFxkdWNhbmgudHJpbmhcXHByb2plY3RzXFxsYWJlbGNoZWNrZXIvc3JjXFxhcHBcXGxvZ2luXFxsb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVFLGtCQUFpQjtFQUNqQixtQkFBa0I7RUFDbEIsaUJBQWdCO0VBRWhCLGFBQVksRUFDYjs7QUFFRDtFQUNFLFlBQVcsRUFDWiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNhcmQge1xyXG4gIC8vICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgLy8gICBwYWRkaW5nOiAyMHB4O1xyXG4gIHdpZHRoOiA0MDBweDtcclxufVxyXG5cclxuLmZ1bGwtd2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport sjcl from 'sjcl';\r\nimport { MatDialog } from '@angular/material';\r\nimport { HelpComponent } from '../help/help.component';\r\n\r\nexport const MESLISPW =\r\n  '9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08';\r\nexport const MESLISUSER = 'test';\r\n\r\nexport interface User {\r\n  id: number;\r\n  username: string;\r\n  jwtToken: { token: string };\r\n}\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  showSpinner = false;\r\n  user: User;\r\n  username = '';\r\n  password = '';\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (!this.auth.isLogged()) {\r\n      setTimeout(() => this.openHelpPage());\r\n    }\r\n  }\r\n\r\n  login() {\r\n    this.showSpinner = true;\r\n    this.auth\r\n      .login(this.username, this.generateSha256(this.password))\r\n      .subscribe(\r\n        res => {\r\n          this.showSpinner = false;\r\n          this.router.navigate(['/labeling']);\r\n        },\r\n        err => {\r\n          this.showSpinner = false;\r\n          this.password = '';\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  openHelpPage() {\r\n    this.dialog.open(HelpComponent, {\r\n      height: '80%',\r\n      width: '80%'\r\n    });\r\n  }\r\n\r\n  private generateSha256(input) {\r\n    if (input === null) {\r\n      return 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\r\n    }\r\n\r\n    const hash = sjcl.hash.sha256.hash(input);\r\n    const output = sjcl.codec.hex.fromBits(hash);\r\n\r\n    return output;\r\n  }\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <span class=\\\"spacer\\\"></span>\\r\\n  <button (click)=\\\"openHelpPage()\\\" class=\\\"toolbar-item\\\" mat-icon-button>\\r\\n    <mat-icon>help</mat-icon>\\r\\n  </button>\\r\\n  <div *ngIf=\\\"auth.isLogged(); else notLogged\\\">\\r\\n    <!-- <gl-score-display></gl-score-display> -->\\r\\n    <button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"toolbar-item\\\" mat-icon-button>\\r\\n      <mat-icon>person</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #notLogged>\\r\\n    <button mat-button routerLink=\\\"/login\\\">Login</button>\\r\\n  </ng-template>\\r\\n</mat-toolbar>\\r\\n<mat-menu #menu=\\\"matMenu\\\">\\r\\n  <!-- <button mat-menu-item disabled>Kontostand</button> -->\\r\\n  <button mat-menu-item disabled>{{ auth.getUsername() }}</button>\\r\\n  <button mat-menu-item (click)=\\\"logout()\\\">Logout</button>\\r\\n</mat-menu>\\r\\n\"","module.exports = \".spacer {\\n  flex: 1 1 auto; }\\n\\n.toolbar-item {\\n  margin: 0 6px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2YmFyL0M6XFxVc2Vyc1xcZHVjYW5oLnRyaW5oXFxwcm9qZWN0c1xcbGFiZWxjaGVja2VyL3NyY1xcYXBwXFxuYXZiYXJcXG5hdmJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWMsRUFDZjs7QUFDRDtFQUNFLGNBQWEsRUFDZCIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3BhY2VyIHtcclxuICBmbGV4OiAxIDEgYXV0bztcclxufVxyXG4udG9vbGJhci1pdGVtIHtcclxuICBtYXJnaW46IDAgNnB4O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material';\r\nimport { HelpComponent } from '../help/help.component';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  logout() {\r\n    this.auth.logout();\r\n    this.router.navigate(['loggedOut']);\r\n  }\r\n\r\n  openHelpPage() {\r\n    this.dialog.open(HelpComponent, {\r\n      height: '80%',\r\n      width: '80%'\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url: 'http://meslis-test-3.corp.deecoob.com:58192/graphql'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}