{"version":3,"file":"gamifilearning-lib.js.map","sources":["ng://gamifilearning-lib/lib/app.component.ts","ng://gamifilearning-lib/lib/dashboard/dashboard.component.ts","ng://gamifilearning-lib/lib/leaderboard/leaderboard.component.ts","ng://gamifilearning-lib/lib/config.ts","ng://gamifilearning-lib/lib/shared/question.service.ts","ng://gamifilearning-lib/lib/shared/gamification.service.ts","ng://gamifilearning-lib/lib/shared/animations.ts","ng://gamifilearning-lib/lib/reward-dialog/reward-dialog.component.ts","ng://gamifilearning-lib/lib/question-room/question-room.component.ts","ng://gamifilearning-lib/lib/shared/user.service.ts","ng://gamifilearning-lib/lib/navbar/navbar.component.ts","ng://gamifilearning-lib/lib/chart/chart.component.ts","ng://gamifilearning-lib/lib/score-display/score-display.component.ts","ng://gamifilearning-lib/lib/shared/translate.pipe.ts","ng://gamifilearning-lib/lib/app.module.ts","ng://gamifilearning-lib/lib/shared/communication.service.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class RootComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    // this.communication.loadData().subscribe(res => {\r\n    //   this.texts = res;\r\n    // });\r\n    // this.questions = QUESTIONS;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent {\r\n  cards = [\r\n    { title: 'Card 1', cols: 1, rows: 1 },\r\n    { title: 'Card 2', cols: 1, rows: 1 },\r\n    { title: 'Card 3', cols: 1, rows: 1 },\r\n    { title: 'Card 4', cols: 1, rows: 1 }\r\n  ];\r\n\r\n  constructor() {}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-leaderboard',\r\n  templateUrl: './leaderboard.component.html',\r\n  styleUrls: ['./leaderboard.component.scss']\r\n})\r\nexport class LeaderboardComponent implements OnInit {\r\n  columnsToDisplay = ['rank', 'userName', 'score'];\r\n\r\n  users = [\r\n    { name: 'Phil', rank: '1', score: '555' },\r\n    { name: 'Mill', rank: '2', score: '444' },\r\n    { name: 'Bill', rank: '3', score: '333' },\r\n    { name: 'Til', rank: '4', score: '222' }\r\n  ];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","export const NUMBER_OF_TEXTS = 5;\r\nexport const NUMBER_OF_UNLABELED_DATA = 500;\r\nexport const UNLABELED_INDEX = 31;\r\nexport const ENTROPY_INDEX = 32;\r\nexport const URL_TO_DATA = './assets/data/mainTfIdf.05112018.feature.json';\r\nexport const URL_TO_LOGIN = 'http://meslis-test-3.corp.deecoob.com:58190';\r\nexport const MESLISPW =\r\n  '9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08';\r\nexport const MESLISUSER = 'test';\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { JsonFeature, BackendResponse, Answer } from './data.interface.js';\r\nimport { NUMBER_OF_TEXTS, UNLABELED_INDEX, ENTROPY_INDEX } from '../config.js';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionService {\r\n  data: JsonFeature[] = [];\r\n\r\n  private currentInstance = new BehaviorSubject<BackendResponse>(null);\r\n  currentInstance$ = this.currentInstance.asObservable();\r\n\r\n  private answers = new BehaviorSubject<Answer[]>([]);\r\n  answers$ = this.answers.asObservable();\r\n\r\n  constructor(/** private communication: CommunicationService*/) {\r\n    // this.updateNextInstance();\r\n  }\r\n\r\n  getUnlabeledInstances(data: JsonFeature[] = this.data): JsonFeature[] {\r\n    return data.filter(feature => feature.features[1][UNLABELED_INDEX] != null);\r\n  }\r\n\r\n  /**\r\n   * Return top scoring data objects\r\n   * @param data corresponding data set\r\n   * @param number number of instances to return\r\n   */\r\n  getTopInstances(\r\n    data: JsonFeature[],\r\n    number: number = NUMBER_OF_TEXTS\r\n  ): JsonFeature[] {\r\n    const unlabeled = this.getUnlabeledInstances(data);\r\n    return unlabeled\r\n      .sort((a, b) => {\r\n        if (a.features[1][ENTROPY_INDEX] < b.features[1][ENTROPY_INDEX]) {\r\n          return 1;\r\n        } else {\r\n          return -1;\r\n        }\r\n      })\r\n      .slice(0, number);\r\n  }\r\n\r\n  handleSubmittedAnswers(answers: Answer[]) {\r\n    this.answers.next(answers);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nconst GIPHY_API_KEY = 'n8VZGDtSpax8HM6j486SScMj5vMcavN2';\r\nconst GIPHY_URL = 'http://api.giphy.com/v1/gifs/search';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GamificationService {\r\n  private score = new BehaviorSubject(0);\r\n  score$ = this.score.asObservable();\r\n\r\n  private progress = new BehaviorSubject(0);\r\n  progress$ = this.progress.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.fetchScore().subscribe(score => this.score.next(score));\r\n  }\r\n\r\n  increaseScore(weight: number) {\r\n    this.doIncreaseScore(weight).subscribe(score => this.score.next(score));\r\n    // this.score.next(this.score.value + Math.floor(weight * 100));\r\n  }\r\n\r\n  getTrivia(date: Date = new Date()) {\r\n    return this.http.get(\r\n      `http://numbersapi.com/${date.getMonth() + 1}/${date.getDate()}/date`,\r\n      {\r\n        responseType: 'text'\r\n      }\r\n    );\r\n  }\r\n\r\n  getRandomGif(query: string) {\r\n    return this.http\r\n      .get(GIPHY_URL, {\r\n        params: {\r\n          api_key: GIPHY_API_KEY,\r\n          limit: '50',\r\n          rating: 'g',\r\n          q: query\r\n        }\r\n      })\r\n      .pipe(\r\n        // chose a random gif out of the array of gifs\r\n        map((gif: any) => this.getRandomElement(gif.data))\r\n      );\r\n  }\r\n\r\n  // currently mocked. Should be persisted in backend later\r\n  private fetchScore() {\r\n    return of(500);\r\n  }\r\n\r\n  // currently mocked too\r\n  private doIncreaseScore(weight: number) {\r\n    return of(this.score.value + Math.floor(weight * 100));\r\n  }\r\n\r\n  /** Helper function to chose a random element from an array */\r\n  private getRandomElement<T>(array: T[]): T {\r\n    return array[Math.floor(Math.random() * array.length)];\r\n  }\r\n}\r\n","import { style, animation, animate, keyframes } from '@angular/animations';\r\n\r\nexport const pulseAnimation = animation([\r\n  style({ transform: 'scale(1)' }),\r\n  animate(\r\n    '{{ timings }}',\r\n    keyframes([\r\n      style({ transform: 'scale(1)', offset: 0 }),\r\n      style({ transform: 'scale({{ scale }})', offset: 0.5 }),\r\n      style({ transform: 'scale(1)', offset: 1 })\r\n    ])\r\n  )\r\n]);\r\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { GamificationService } from '../shared/gamification.service';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'gl-reward-dialog',\n  templateUrl: './reward-dialog.component.html',\n  styleUrls: ['./reward-dialog.component.scss']\n})\nexport class RewardDialogComponent implements OnInit {\n  trivia = this.gamification.getTrivia();\n  thanksPic = this.gamification.getRandomGif('thanks');\n  moneyPic = this.gamification.getRandomGif('money');\n  total;\n  constructor(\n    private gamification: GamificationService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit() {\n    this.total = this.data.total;\n  }\n}\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { QuestionService } from '../shared/question.service';\r\nimport { MatSelectionList } from '@angular/material/list';\r\nimport { GamificationService } from '../shared/gamification.service';\r\nimport { Answer, BackendResponse } from '../shared/data.interface';\r\nimport {\r\n  trigger,\r\n  transition,\r\n  style,\r\n  animate,\r\n  keyframes,\r\n  useAnimation\r\n} from '@angular/animations';\r\nimport { pulseAnimation } from '../shared/animations';\r\nimport { MatDialog, MatSnackBar } from '@angular/material';\r\nimport { RewardDialogComponent } from '../reward-dialog/reward-dialog.component';\r\n\r\nexport interface Reward {\r\n  position: number;\r\n  unlocked: boolean;\r\n  // label: string;\r\n  icon: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'gl-question-room',\r\n  templateUrl: './question-room.component.html',\r\n  styleUrls: ['./question-room.component.scss'],\r\n  animations: [\r\n    trigger('fadeIn', [\r\n      transition(':increment', [\r\n        animate(\r\n          '500ms',\r\n          keyframes([\r\n            style({ opacity: '1' }),\r\n            style({ opacity: '0' }),\r\n            style({ opacity: '1' })\r\n          ])\r\n        )\r\n      ])\r\n    ]),\r\n    trigger('unlockReward', [\r\n      transition('false => true', [\r\n        useAnimation(pulseAnimation, {\r\n          params: {\r\n            timings: '400ms cubic-bezier(.11,.99,.83,.43)',\r\n            scale: 1.5\r\n          }\r\n        })\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class QuestionRoomComponent implements OnInit, OnChanges, OnDestroy {\r\n  currentQuestion = 0;\r\n  tempAnswers: Answer[] = [];\r\n  lockedRewards;\r\n  isLoading = true;\r\n  thanksGif;\r\n\r\n  @Input() maxProgress: number;\r\n  @Input() done: number;\r\n  @Input() currentInstance: any;\r\n  @Input() rewards: Reward[];\r\n  @Input() questions: string[];\r\n  @Input() answers: string[];\r\n  @Input() showProgressbar = true;\r\n  @Input() answerMode: string;\r\n\r\n  @ViewChild('selectionList')\r\n  selection: MatSelectionList;\r\n  constructor(\r\n    private question: QuestionService,\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private gf: GamificationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.doUpdateRewards();\r\n    this.thanksGif = this.gf.getRandomGif('party');\r\n  }\r\n\r\n  ngOnChanges(changes) {\r\n    if (changes.done) {\r\n      this.doUpdateRewards();\r\n    }\r\n    if (changes.currentInstance) {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.currentInstance.text = '';\r\n  }\r\n\r\n  isDone(): boolean {\r\n    return this.done != null && this.done >= this.maxProgress;\r\n  }\r\n\r\n  sendAnswer(answer: string) {\r\n    const answersToBackend = this.tempAnswers.concat(this.createAnswer(answer));\r\n    this.tempAnswers = [];\r\n    this.question.handleSubmittedAnswers(answersToBackend);\r\n  }\r\n\r\n  claimReward(reward) {\r\n    if (reward.unlocked) {\r\n      this.dialog.open(RewardDialogComponent, {\r\n        data: { total: reward.total }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle keyboard interaction\r\n   * Only working hardcoded for binary atm\r\n   */\r\n  onKey(event: KeyboardEvent) {\r\n    if (this.answerMode !== 'binary') {\r\n      return false;\r\n    }\r\n    switch (event.key) {\r\n      case 'ArrowLeft':\r\n        this.submitAnswer('yes');\r\n        break;\r\n      case 'ArrowRight':\r\n        this.submitAnswer('no');\r\n        break;\r\n      case 'ArrowUp':\r\n        this.submitAnswer('maybe');\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  private createAnswer(answer: string): Answer {\r\n    let newAnswer: Answer;\r\n    newAnswer = {\r\n      documentId: this.currentInstance.id,\r\n      questionId: this.questions[this.currentQuestion],\r\n      answer: answer\r\n    };\r\n    return newAnswer;\r\n  }\r\n\r\n  // Tracking the temp rewards is necessary to react to unlocked rewards\r\n  // This might need an overhaul since it's too complicated\r\n  private updateRewards() {\r\n    const locked = this.rewards.filter(reward => reward.unlocked === false);\r\n    const tmpLocked = locked;\r\n    this.doUpdateRewards();\r\n    this.lockedRewards = this.rewards.filter(\r\n      reward => reward.unlocked === false\r\n    );\r\n    if (this.lockedRewards.length < tmpLocked.length) {\r\n      this.claimReward(tmpLocked[0]);\r\n    }\r\n    console.log(this.lockedRewards, tmpLocked);\r\n  }\r\n\r\n  private doUpdateRewards() {\r\n    const locked = this.rewards.filter(reward => reward.unlocked === false);\r\n    // Update unlock status flag on all rewards\r\n    locked.forEach(reward => {\r\n      if ((this.done / this.maxProgress) * 100 >= reward.position) {\r\n        reward.unlocked = true;\r\n        console.log(reward);\r\n      }\r\n    });\r\n  }\r\n\r\n  submitAnswer(answer: string) {\r\n    if (this.currentQuestion + 1 < this.questions.length) {\r\n      this.tempAnswers = [...this.tempAnswers, this.createAnswer(answer)];\r\n      this.currentQuestion++;\r\n    } else {\r\n      this.isLoading = true;\r\n      // One Iteration of Question-Package done\r\n      this.sendAnswer(answer);\r\n      this.currentQuestion = 0;\r\n      this.done++;\r\n      this.updateRewards();\r\n    }\r\n    // this.mockAchievementCheck();\r\n  }\r\n\r\n  mockAchievementCheck() {\r\n    if (Math.random() < 0.05) {\r\n      const percent = Math.floor(Math.random() * 25) + 75;\r\n      this.snack.open(percent + '% deiner Kollegen wÃ¤hlten dasselbe ð', 'OK', {\r\n        duration: 2000\r\n      });\r\n    }\r\n  }\r\n\r\n  finish() {\r\n    window.open('https://goo.gl/forms/BzagdIsUOy6hA2wB2', '_blank');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\nexport interface User {\r\n  id: number;\r\n  username: string;\r\n  jwtToken: { token: string };\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  user: User;\r\n\r\n  constructor() {}\r\n\r\n  // login(username: string, password: string): Observable<User> {\r\n  //   return this.apollo\r\n  //     .query({\r\n  //       query: gql`\r\n  //         {\r\n  //           login(username: \"${username}\", password: \"${password}\") {\r\n  //             id,\r\n  //             firstName,\r\n  //             lastName,\r\n  //             username,\r\n  //             jwtToken {\r\n  //               token\r\n  //             }\r\n  //           }\r\n  //         }\r\n  //       `\r\n  //     })\r\n  //     .pipe(\r\n  //       map((res: any) => {\r\n  //         this.user = res.data.login;\r\n  //         window.localStorage.setItem('token', this.user.jwtToken.token);\r\n  //         return this.user;\r\n  //       })\r\n  //     );\r\n  // }\r\n\r\n  // logout(): void {\r\n  //   this.apollo\r\n  //     .query({\r\n  //       query: gql`\r\n  //         {\r\n  //           logout\r\n  //         }\r\n  //       `\r\n  //     })\r\n  //     .subscribe(\r\n  //       _ => {\r\n  //         window.localStorage.removeItem('token');\r\n  //         this.router.navigate(['/']);\r\n  //       },\r\n  //       err => {\r\n  //         console.error(err);\r\n  //       }\r\n  //     );\r\n  // }\r\n\r\n  // isLogged(): boolean {\r\n  //   return window.localStorage.getItem('token') ? true : false;\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GamificationService } from '../shared/gamification.service';\r\nimport { UserService } from '../shared/user.service';\r\n\r\n@Component({\r\n  selector: 'gl-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  gamification = this.gamificationService;\r\n  constructor(\r\n    public user: UserService,\r\n    private gamificationService: GamificationService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gl-chart',\r\n  templateUrl: './chart.component.html',\r\n  styleUrls: ['./chart.component.scss']\r\n})\r\nexport class ChartComponent implements OnInit {\r\n  view = undefined;\r\n\r\n  // options\r\n  showXAxis = true;\r\n  showYAxis = true;\r\n  gradient = false;\r\n  showLegend = true;\r\n  showXAxisLabel = true;\r\n  xAxisLabel = 'Number';\r\n  showYAxisLabel = true;\r\n  yAxisLabel = 'Color Value';\r\n  timeline = true;\r\n\r\n  colorScheme = {\r\n    domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\r\n  };\r\n\r\n  multi: any[] = [\r\n    {\r\n      name: 'Accuracy',\r\n      value: 83\r\n    },\r\n    {\r\n      name: 'F1 Score',\r\n      value: 91\r\n    }\r\n  ];\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { trigger, transition, useAnimation } from '@angular/animations';\r\nimport { pulseAnimation } from '../shared/animations';\r\nimport { GamificationService } from '../shared/gamification.service';\r\n\r\n@Component({\r\n  selector: 'gl-score-display',\r\n  templateUrl: './score-display.component.html',\r\n  styleUrls: ['./score-display.component.scss'],\r\n  animations: [\r\n    trigger('scoreChange', [\r\n      transition(\r\n        ':increment',\r\n        useAnimation(pulseAnimation, {\r\n          params: {\r\n            timings: '400ms cubic-bezier(.11,.99,.83,.43)',\r\n            scale: 1.25\r\n          }\r\n        })\r\n      )\r\n    ])\r\n  ]\r\n})\r\nexport class ScoreDisplayComponent implements OnInit {\r\n  constructor(public gamification: GamificationService) {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Very quick and dirty solution to \"translate\" Ids from backend\n * Angular i18n currently can't translate variables\n * ngx-translate would add another dependency\n */\n@Pipe({\n  name: 'translate'\n})\nexport class TranslatePipe implements PipeTransform {\n  transform(value: string, args?: any): any {\n    switch (value) {\n      case 'isEvent':\n        return 'Beschreibt der Text eine <b>Veranstaltung</b>?';\n      case 'isMusic':\n        return 'Geht es inhaltlich um <b>Musik</b>?';\n      case 'isMovie':\n        return 'Geht es inhaltlich um <b>Filme</b>?';\n      case 'yes':\n        return 'Ja';\n      case 'no':\n        return 'Nein';\n      case 'maybe':\n        return 'Unklar';\n      case '1':\n        return 'Trifft nicht zu';\n      case '2':\n        return 'Trifft eher nicht zu';\n      case '3':\n        return 'WeiÃ nicht';\n      case '4':\n        return 'Trifft eher zu';\n      case '5':\n        return 'Trifft zu';\n      default:\n        return value;\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { RootComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n// import { NgxChartsModule } from '@swimlane/ngx-charts';\r\n\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport {\r\n  MatGridListModule,\r\n  MatCardModule,\r\n  MatMenuModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatProgressBarModule,\r\n  MatInputModule,\r\n  MatTableModule,\r\n  MatToolbarModule,\r\n  MatBadgeModule,\r\n  MatListModule,\r\n  MatProgressSpinnerModule,\r\n  MatTooltipModule,\r\n  MatDialogModule,\r\n  MatSnackBarModule\r\n} from '@angular/material';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { LeaderboardComponent } from './leaderboard/leaderboard.component';\r\nimport { QuestionRoomComponent } from './question-room/question-room.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { ChartComponent } from './chart/chart.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ScoreDisplayComponent } from './score-display/score-display.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RewardDialogComponent } from './reward-dialog/reward-dialog.component';\r\nimport { TranslatePipe } from './shared/translate.pipe';\r\n\r\nconst MaterialModules = [\r\n  MatInputModule,\r\n  MatProgressBarModule,\r\n  MatCardModule,\r\n  MatButtonModule,\r\n  MatGridListModule,\r\n  MatMenuModule,\r\n  MatIconModule,\r\n  LayoutModule,\r\n  MatTableModule,\r\n  MatToolbarModule,\r\n  MatBadgeModule,\r\n  MatListModule,\r\n  MatProgressSpinnerModule,\r\n  MatTooltipModule,\r\n  MatDialogModule,\r\n  MatSnackBarModule\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RootComponent,\r\n    DashboardComponent,\r\n    LeaderboardComponent,\r\n    QuestionRoomComponent,\r\n    NavbarComponent,\r\n    ChartComponent,\r\n    ScoreDisplayComponent,\r\n    RewardDialogComponent,\r\n    TranslatePipe\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModules,\r\n    HttpClientModule,\r\n    FormsModule\r\n    // NgxChartsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [RootComponent],\r\n  exports: [RootComponent, QuestionRoomComponent, ScoreDisplayComponent],\r\n  entryComponents: [QuestionRoomComponent, RewardDialogComponent]\r\n})\r\nexport class GLModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { JsonFeature, BackendResponse, Answer } from './data.interface';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { UNLABELED_INDEX, ENTROPY_INDEX, URL_TO_DATA } from '../config';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommunicationService {\r\n  data: JsonFeature[] = [];\r\n  constructor(private http: HttpClient) {}\r\n  loadData(src: string = URL_TO_DATA): Observable<JsonFeature[]> {\r\n    return this.http\r\n      .get<JsonFeature[]>(URL_TO_DATA)\r\n      .pipe(map(res => this.enhanceFeatures(res)));\r\n  }\r\n\r\n  /** Mocking data to add unlabeled data and selectionScore (entropy) */\r\n  enhanceFeatures(data: JsonFeature[]): JsonFeature[] {\r\n    const features = data;\r\n    for (let i = 0; i < features.length / 2; i++) {\r\n      features[i]['features'][1][UNLABELED_INDEX] = 0;\r\n      features[i]['features'][1][ENTROPY_INDEX] = Math.random();\r\n    }\r\n    return features;\r\n  }\r\n\r\n  // getNextInstance(): Observable<BackendResponse> {\r\n  //   // TODO clean up subscribe chain\r\n  //   return this.http.get<BackendResponse>('assets/mock.dataobject.json').pipe(\r\n  //     map(obj => {\r\n  //       this.http\r\n  //         .get<string>('https://icanhazdadjoke.com/', {\r\n  //           headers: new HttpHeaders({\r\n  //             Accept: 'application/json'\r\n  //           })\r\n  //         })\r\n  //         .subscribe((quote: any) => {\r\n  //           obj.text = quote.joke;\r\n  //         });\r\n  //       obj.objectId = Math.floor(Math.random() * 100);\r\n  //       return obj;\r\n  //     })\r\n  //   );\r\n  // }\r\n\r\n  // sendAnswersBack(answer: Answer[]): Observable<boolean> {\r\n  //   // Fake connection\r\n  //   return of(true);\r\n  // }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;IAQE;KAAgB;;;;IAEhB,gCAAQ;;;IAAR;;;;;KAKC;;gBAbF,SAAS,SAAC;oBACT,QAAQ,EAAE,SAAS;oBACnB,4NAAmC;;iBAEpC;;;;IAUD,oBAAC;CAdD;;;;;;ACFA;IAeE;QAPA,UAAK,GAAG;YACN,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;YACrC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;YACrC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;YACrC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;SACtC,CAAC;KAEc;;gBAbjB,SAAS,SAAC;oBACT,QAAQ,EAAE,cAAc;oBACxB,++DAAyC;;iBAE1C;;;;IAUD,yBAAC;CAdD;;;;;;ACFA;IAiBE;QATA,qBAAgB,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;QAEjD,UAAK,GAAG;YACN,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;YACzC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;YACzC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;YACzC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;SACzC,CAAC;KAEc;;;;IAEhB,uCAAQ;;;IAAR,eAAa;;gBAjBd,SAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,oxBAA2C;;iBAE5C;;;;IAcD,2BAAC;CAlBD;;;;;;;ACFA,IAAa,eAAe,GAAG,CAAC;;AAEhC,IAAa,eAAe,GAAG,EAAE;;AACjC,IAAa,aAAa,GAAG,EAAE;;AAC/B,IAAa,WAAW,GAAG,+CAA+C;;;;;;ACJ1E;IAiBE;QARA,SAAI,GAAkB,EAAE,CAAC;QAEjB,oBAAe,GAAG,IAAI,eAAe,CAAkB,IAAI,CAAC,CAAC;QACrE,qBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QAE/C,YAAO,GAAG,IAAI,eAAe,CAAW,EAAE,CAAC,CAAC;QACpD,aAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;;KAItC;;;;;IAED,+CAAqB;;;;IAArB,UAAsB,IAA+B;QAA/B,qBAAA,EAAA,OAAsB,IAAI,CAAC,IAAI;QACnD,OAAO,IAAI,CAAC,MAAM,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,IAAI,GAAA,CAAC,CAAC;KAC7E;;;;;;;;;;;;IAOD,yCAAe;;;;;;IAAf,UACE,IAAmB,EACnB,MAAgC;QAAhC,uBAAA,EAAA,wBAAgC;;YAE1B,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC;QAClD,OAAO,SAAS;aACb,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACT,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE;gBAC/D,OAAO,CAAC,CAAC;aACV;iBAAM;gBACL,OAAO,CAAC,CAAC,CAAC;aACX;SACF,CAAC;aACD,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;KACrB;;;;;IAED,gDAAsB;;;;IAAtB,UAAuB,OAAiB;QACtC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC5B;;gBA3CF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;0BAPD;CAKA;;;;;;ACLA;IAKM,aAAa,GAAG,kCAAkC;;IAClD,SAAS,GAAG,qCAAqC;AAEvD;IAUE,6BAAoB,IAAgB;QAApC,iBAEC;QAFmB,SAAI,GAAJ,IAAI,CAAY;QAN5B,UAAK,GAAG,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC;QACvC,WAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;QAE3B,aAAQ,GAAG,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC;QAC1C,cAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QAGvC,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;KAC9D;;;;;IAED,2CAAa;;;;IAAb,UAAc,MAAc;QAA5B,iBAGC;QAFC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;;KAEzE;;;;;IAED,uCAAS;;;;IAAT,UAAU,IAAuB;QAAvB,qBAAA,EAAA,WAAiB,IAAI,EAAE;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,4BAAyB,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,UAAI,IAAI,CAAC,OAAO,EAAE,UAAO,EACrE;YACE,YAAY,EAAE,MAAM;SACrB,CACF,CAAC;KACH;;;;;IAED,0CAAY;;;;IAAZ,UAAa,KAAa;QAA1B,iBAcC;QAbC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,SAAS,EAAE;YACd,MAAM,EAAE;gBACN,OAAO,EAAE,aAAa;gBACtB,KAAK,EAAE,IAAI;gBACX,MAAM,EAAE,GAAG;gBACX,CAAC,EAAE,KAAK;aACT;SACF,CAAC;aACD,IAAI;;QAEH,GAAG,CAAC,UAAC,GAAQ,IAAK,OAAA,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAA,CAAC,CACnD,CAAC;KACL;;;;;;;IAGO,wCAAU;;;;;;IAAlB;QACE,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;KAChB;;;;;;;;IAGO,6CAAe;;;;;;;IAAvB,UAAwB,MAAc;QACpC,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC;KACxD;;;;;;;;;IAGO,8CAAgB;;;;;;;IAAxB,UAA4B,KAAU;QACpC,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;KACxD;;gBAzDF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;gBARQ,UAAU;;;8BAFnB;CAQA;;;;;;ACRA;AAEA,IAAa,cAAc,GAAG,SAAS,CAAC;IACtC,KAAK,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC;IAChC,OAAO,CACL,eAAe,EACf,SAAS,CAAC;QACR,KAAK,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;QAC3C,KAAK,CAAC,EAAE,SAAS,EAAE,oBAAoB,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;QACvD,KAAK,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;KAC5C,CAAC,CACH;CACF,CAAC;;;;;;ACZF;IAcE,+BACU,YAAiC,EACT,IAAS;QADjC,iBAAY,GAAZ,YAAY,CAAqB;QACT,SAAI,GAAJ,IAAI,CAAK;QAN3C,WAAM,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;QACvC,cAAS,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACrD,aAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;KAK/C;;;;IAEJ,wCAAQ;;;IAAR;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;KAC9B;;gBAjBF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,4hBAA6C;;iBAE9C;;;;gBAPQ,mBAAmB;gDAevB,MAAM,SAAC,eAAe;;IAM3B,4BAAC;CAlBD;;;;;;;IC0EE,+BACU,QAAyB,EACzB,MAAiB,EACjB,KAAkB,EAClB,EAAuB;QAHvB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAW;QACjB,UAAK,GAAL,KAAK,CAAa;QAClB,OAAE,GAAF,EAAE,CAAqB;QArBjC,oBAAe,GAAG,CAAC,CAAC;QACpB,gBAAW,GAAa,EAAE,CAAC;QAE3B,cAAS,GAAG,IAAI,CAAC;QASR,oBAAe,GAAG,IAAI,CAAC;KAU5B;;;;IAEJ,wCAAQ;;;IAAR;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;KAChD;;;;;IAED,2CAAW;;;;IAAX,UAAY,OAAO;QACjB,IAAI,OAAO,CAAC,IAAI,EAAE;YAChB,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;QACD,IAAI,OAAO,CAAC,eAAe,EAAE;YAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;KACF;;;;IAED,2CAAW;;;IAAX;QACE,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,EAAE,CAAC;KAChC;;;;IAED,sCAAM;;;IAAN;QACE,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC;KAC3D;;;;;IAED,0CAAU;;;;IAAV,UAAW,MAAc;;YACjB,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC3E,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,CAAC;KACxD;;;;;IAED,2CAAW;;;;IAAX,UAAY,MAAM;QAChB,IAAI,MAAM,CAAC,QAAQ,EAAE;YACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE;gBACtC,IAAI,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE;aAC9B,CAAC,CAAC;SACJ;KACF;;;;;;;;;;;IAMD,qCAAK;;;;;;IAAL,UAAM,KAAoB;QACxB,IAAI,IAAI,CAAC,UAAU,KAAK,QAAQ,EAAE;YAChC,OAAO,KAAK,CAAC;SACd;QACD,QAAQ,KAAK,CAAC,GAAG;YACf,KAAK,WAAW;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,MAAM;YACR,KAAK,YAAY;gBACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACxB,MAAM;YACR,KAAK,SAAS;gBACZ,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;gBAC3B,MAAM;YACR;gBACE,OAAO,IAAI,CAAC;SACf;KACF;;;;;;IAEO,4CAAY;;;;;IAApB,UAAqB,MAAc;;YAC7B,SAAiB;QACrB,SAAS,GAAG;YACV,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE;YACnC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC;YAChD,MAAM,EAAE,MAAM;SACf,CAAC;QACF,OAAO,SAAS,CAAC;KAClB;;;;;;;;;IAIO,6CAAa;;;;;;;IAArB;;YACQ,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,QAAQ,KAAK,KAAK,GAAA,CAAC;;YACjE,SAAS,GAAG,MAAM;QACxB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CACtC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,QAAQ,KAAK,KAAK,GAAA,CACpC,CAAC;QACF,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,EAAE;YAChD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAChC;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;KAC5C;;;;;IAEO,+CAAe;;;;IAAvB;QAAA,iBASC;;YARO,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,QAAQ,KAAK,KAAK,GAAA,CAAC;;QAEvE,MAAM,CAAC,OAAO,CAAC,UAAA,MAAM;YACnB,IAAI,CAAC,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,WAAW,IAAI,GAAG,IAAI,MAAM,CAAC,QAAQ,EAAE;gBAC3D,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACvB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;aACrB;SACF,CAAC,CAAC;KACJ;;;;;IAED,4CAAY;;;;IAAZ,UAAa,MAAc;QACzB,IAAI,IAAI,CAAC,eAAe,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YACpD,IAAI,CAAC,WAAW,YAAO,IAAI,CAAC,WAAW,GAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAC,CAAC;YACpE,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;YAEtB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YACxB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;YACzB,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;;KAEF;;;;IAED,oDAAoB;;;IAApB;QACE,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,EAAE;;gBAClB,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE;YACnD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,uCAAuC,EAAE,IAAI,EAAE;gBACvE,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;SACJ;KACF;;;;IAED,sCAAM;;;IAAN;QACE,MAAM,CAAC,IAAI,CAAC,wCAAwC,EAAE,QAAQ,CAAC,CAAC;KACjE;;gBA/KF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,4vHAA6C;oBAE7C,UAAU,EAAE;wBACV,OAAO,CAAC,QAAQ,EAAE;4BAChB,UAAU,CAAC,YAAY,EAAE;gCACvB,OAAO,CACL,OAAO,EACP,SAAS,CAAC;oCACR,KAAK,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;oCACvB,KAAK,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;oCACvB,KAAK,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;iCACxB,CAAC,CACH;6BACF,CAAC;yBACH,CAAC;wBACF,OAAO,CAAC,cAAc,EAAE;4BACtB,UAAU,CAAC,eAAe,EAAE;gCAC1B,YAAY,CAAC,cAAc,EAAE;oCAC3B,MAAM,EAAE;wCACN,OAAO,EAAE,qCAAqC;wCAC9C,KAAK,EAAE,GAAG;qCACX;iCACF,CAAC;6BACH,CAAC;yBACH,CAAC;qBACH;;iBACF;;;;gBAnDQ,eAAe;gBAaf,SAAS;gBAAE,WAAW;gBAXtB,mBAAmB;;;8BAyDzB,KAAK;uBACL,KAAK;kCACL,KAAK;0BACL,KAAK;4BACL,KAAK;0BACL,KAAK;kCACL,KAAK;6BACL,KAAK;4BAEL,SAAS,SAAC,eAAe;;IAmI5B,4BAAC;CAhLD;;;;;;AC/BA;IAiBE;KAAgB;;gBANjB,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;sBAbD;CAWA;;;;;;ACXA;IAWE,yBACS,IAAiB,EAChB,mBAAwC;QADzC,SAAI,GAAJ,IAAI,CAAa;QAChB,wBAAmB,GAAnB,mBAAmB,CAAqB;QAHlD,iBAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC;KAIpC;;;;IAEJ,kCAAQ;;;IAAR,eAAa;;gBAZd,SAAS,SAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,60BAAsC;;iBAEvC;;;;gBANQ,WAAW;gBADX,mBAAmB;;IAgB5B,sBAAC;CAbD;;;;;;ACJA;IAmCE;QA3BA,SAAI,GAAG,SAAS,CAAC;;QAGjB,cAAS,GAAG,IAAI,CAAC;QACjB,cAAS,GAAG,IAAI,CAAC;QACjB,aAAQ,GAAG,KAAK,CAAC;QACjB,eAAU,GAAG,IAAI,CAAC;QAClB,mBAAc,GAAG,IAAI,CAAC;QACtB,eAAU,GAAG,QAAQ,CAAC;QACtB,mBAAc,GAAG,IAAI,CAAC;QACtB,eAAU,GAAG,aAAa,CAAC;QAC3B,aAAQ,GAAG,IAAI,CAAC;QAEhB,gBAAW,GAAG;YACZ,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;SACrD,CAAC;QAEF,UAAK,GAAU;YACb;gBACE,IAAI,EAAE,UAAU;gBAChB,KAAK,EAAE,EAAE;aACV;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,KAAK,EAAE,EAAE;aACV;SACF,CAAC;KACc;;;;IAEhB,iCAAQ;;;IAAR,eAAa;;gBAnCd,SAAS,SAAC;oBACT,QAAQ,EAAE,UAAU;oBACpB,iMAAqC;;iBAEtC;;;;IAgCD,qBAAC;CApCD;;;;;;ACFA;IAwBE,+BAAmB,YAAiC;QAAjC,iBAAY,GAAZ,YAAY,CAAqB;KAAI;;;;IAExD,wCAAQ;;;IAAR,eAAa;;gBArBd,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,sLAA6C;oBAE7C,UAAU,EAAE;wBACV,OAAO,CAAC,aAAa,EAAE;4BACrB,UAAU,CACR,YAAY,EACZ,YAAY,CAAC,cAAc,EAAE;gCAC3B,MAAM,EAAE;oCACN,OAAO,EAAE,qCAAqC;oCAC9C,KAAK,EAAE,IAAI;iCACZ;6BACF,CAAC,CACH;yBACF,CAAC;qBACH;;iBACF;;;;gBAnBQ,mBAAmB;;IAwB5B,4BAAC;CAtBD;;;;;;ACLA;;;;;AAOA;IAAA;KAgCC;;;;;;IA5BC,iCAAS;;;;;IAAT,UAAU,KAAa,EAAE,IAAU;QACjC,QAAQ,KAAK;YACX,KAAK,SAAS;gBACZ,OAAO,gDAAgD,CAAC;YAC1D,KAAK,SAAS;gBACZ,OAAO,qCAAqC,CAAC;YAC/C,KAAK,SAAS;gBACZ,OAAO,qCAAqC,CAAC;YAC/C,KAAK,KAAK;gBACR,OAAO,IAAI,CAAC;YACd,KAAK,IAAI;gBACP,OAAO,MAAM,CAAC;YAChB,KAAK,OAAO;gBACV,OAAO,QAAQ,CAAC;YAClB,KAAK,GAAG;gBACN,OAAO,iBAAiB,CAAC;YAC3B,KAAK,GAAG;gBACN,OAAO,sBAAsB,CAAC;YAChC,KAAK,GAAG;gBACN,OAAO,YAAY,CAAC;YACtB,KAAK,GAAG;gBACN,OAAO,gBAAgB,CAAC;YAC1B,KAAK,GAAG;gBACN,OAAO,WAAW,CAAC;YACrB;gBACE,OAAO,KAAK,CAAC;SAChB;KACF;;gBA/BF,IAAI,SAAC;oBACJ,IAAI,EAAE,WAAW;iBAClB;;IA8BD,oBAAC;CAhCD;;;;;;ACPA;IAqCM,eAAe,GAAG;IACtB,cAAc;IACd,oBAAoB;IACpB,aAAa;IACb,eAAe;IACf,iBAAiB;IACjB,aAAa;IACb,aAAa;IACb,YAAY;IACZ,cAAc;IACd,gBAAgB;IAChB,cAAc;IACd,aAAa;IACb,wBAAwB;IACxB,gBAAgB;IAChB,eAAe;IACf,iBAAiB;CAClB;AAED;IAAA;KAyBwB;;gBAzBvB,QAAQ,SAAC;oBACR,YAAY,EAAE;wBACZ,aAAa;wBACb,kBAAkB;wBAClB,oBAAoB;wBACpB,qBAAqB;wBACrB,eAAe;wBACf,cAAc;wBACd,qBAAqB;wBACrB,qBAAqB;wBACrB,aAAa;qBACd;oBACD,OAAO,EAAE;wBACP,aAAa;wBACb,uBAAuB;wBACvB,eAAe;wBACf,gBAAgB;wBAChB,WAAW;;qBAEZ;oBACD,SAAS,EAAE,EAAE;oBACb,SAAS,EAAE,CAAC,aAAa,CAAC;oBAC1B,OAAO,EAAE,CAAC,aAAa,EAAE,qBAAqB,EAAE,qBAAqB,CAAC;oBACtE,eAAe,EAAE,CAAC,qBAAqB,EAAE,qBAAqB,CAAC;iBAChE;;IACsB,eAAC;CAzBxB;;;;;;ACxDA;IAYE,8BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,SAAI,GAAkB,EAAE,CAAC;KACe;;;;;IACxC,uCAAQ;;;;IAAR,UAAS,GAAyB;QAAlC,iBAIC;QAJQ,oBAAA,EAAA,iBAAyB;QAChC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAgB,WAAW,CAAC;aAC/B,IAAI,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC,CAAC;KAChD;;;;;;;IAGD,8CAAe;;;;;IAAf,UAAgB,IAAmB;;YAC3B,QAAQ,GAAG,IAAI;QACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC5C,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YAChD,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;SAC3D;QACD,OAAO,QAAQ,CAAC;KACjB;;gBApBF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;gBAJQ,UAAU;;;+BALnB;CAOA;;;;;;;;;;;;;;;;;;;"}
